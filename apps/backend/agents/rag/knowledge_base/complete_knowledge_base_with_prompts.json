{
  "metadata": {
    "version": "2.0.0",
    "description": "Enhanced knowledge base with extracted prompt guidelines",
    "sources": [
      "build_comprehensive_kb.py",
      "slide_generation_prompts.py",
      "icon_guidelines.json"
    ]
  },
  "typography": {
    "sizing_rules": {
      "character_based": {
        "1-10": {
          "max_size": 480,
          "recommended": "320-480pt",
          "ideal_for": "Single word impact",
          "examples": [
            "NOW",
            "2024",
            "YES!",
            "BIG"
          ],
          "tips": [
            "Use for maximum impact",
            "Consider viewport - may need to scale down",
            "Works best with bold weights"
          ]
        },
        "11-20": {
          "max_size": 360,
          "recommended": "240-360pt",
          "ideal_for": "Short impactful phrases",
          "examples": [
            "Game Changer",
            "Think Different",
            "Next Level"
          ],
          "tips": [
            "Great for title slides",
            "Leave breathing room",
            "Consider letter-spacing"
          ]
        },
        "21-40": {
          "max_size": 240,
          "recommended": "180-240pt",
          "ideal_for": "Titles and headers",
          "examples": [
            "Introducing Our New Product",
            "Quarterly Sales Results"
          ]
        },
        "41-80": {
          "max_size": 160,
          "recommended": "120-160pt",
          "ideal_for": "Subtitles and key points"
        },
        "80-200": {
          "max_size": 80,
          "recommended": "48-80pt",
          "ideal_for": "Body text and descriptions"
        },
        "200+": {
          "max_size": 48,
          "recommended": "30-48pt",
          "ideal_for": "Dense content, longer paragraphs"
        },
        "tables": {
          "max_size": 24,
          "recommended": "8-18pt",
          "ideal_for": "Data tables with many rows",
          "minimum": 8,
          "note": "Only for very dense content"
        },
        "80+": {
          "max_size": 80,
          "recommended": "48-80pt"
        }
      },
      "height_calculation": {
        "single_line": "fontSize \u00d7 1.2",
        "multi_line": "fontSize \u00d7 lines \u00d7 1.3",
        "safety_buffer": "Add 10-20% extra",
        "large_text": "If fontSize > 100, add extra 10%",
        "custom_component": "fontSize \u00d7 1.5 minimum"
      },
      "overflow_prevention": {},
      "custom_component_height": {
        "step_1": "Count the actual characters in your text",
        "step_2": "Estimate line wrapping based on width and fontSize",
        "step_3": "Calculate: lines = Math.ceil(totalChars / (width / (fontSize * 0.6)))",
        "step_4": "Height = (fontSize * lines * 1.3) + 40 (padding)",
        "step_5": "MINIMUM height = fontSize * 1.5",
        "step_6": "If using flexbox centering, add extra 20% to height for safety"
      },
      "quick_formulas": [
        "maxFontSize = (containerWidth - 60) / (characterCount \u00d7 0.55)",
        "containerHeight = fontSize \u00d7 1.1"
      ]
    },
    "hierarchy": {
      "hero": {
        "default_family": "Inter",
        "default_size": 240,
        "size_range": "240-800pt",
        "weight": "700-900",
        "letter_spacing": "-0.02em",
        "line_height": 0.9,
        "use_for": "Primary focus, title slides"
      },
      "section": {
        "default_family": "Inter",
        "default_size": 144,
        "size_range": "120-180pt",
        "weight": "600-700",
        "letter_spacing": "-0.01em",
        "line_height": 1.1,
        "use_for": "Section headers, slide titles"
      },
      "body": {
        "default_family": "Arial",
        "default_size": 48,
        "size_range": "36-64pt",
        "weight": "400-500",
        "line_height": 1.5,
        "use_for": "Main content, descriptions"
      },
      "caption": {
        "default_family": "Arial",
        "default_size": 36,
        "size_range": "24-36pt",
        "weight": "400",
        "line_height": 1.4,
        "use_for": "Image captions, footnotes"
      }
    },
    "advanced": {
      "font_pairing": {
        "classic_elegant": {
          "heading": "Playfair Display",
          "body": "Source Sans Pro",
          "mood": "Traditional, sophisticated",
          "use_for": "Luxury, editorial, formal"
        },
        "modern_clean": {
          "heading": "Inter",
          "body": "Inter",
          "mood": "Contemporary, minimal",
          "use_for": "Tech, startups, modern brands"
        },
        "bold_impact": {
          "heading": "Bebas Neue",
          "body": "Open Sans",
          "mood": "Strong, attention-grabbing",
          "use_for": "Sports, events, bold statements"
        },
        "friendly_approachable": {
          "heading": "Poppins",
          "body": "Lato",
          "mood": "Warm, inviting",
          "use_for": "Education, community, social"
        }
      },
      "special_effects": {
        "gradient_text": {
          "technique": "CSS gradient on text",
          "use_sparingly": "Hero text only",
          "colors": "2-3 colors max"
        },
        "outlined_text": {
          "technique": "Stroke without fill",
          "use_for": "Modern, minimalist",
          "stroke_width": "2-4px"
        },
        "shadow_depth": {
          "technique": "Multiple shadows",
          "creates": "3D effect",
          "best_at": "Large sizes"
        }
      },
      "readability_optimization": {
        "contrast_requirements": {
          "minimum": 4.5,
          "large_text": 3.0,
          "ideal": 7.0
        },
        "line_length": {
          "ideal": "45-75 characters",
          "maximum": "90 characters",
          "tip": "Shorter for slides"
        },
        "spacing_ratios": {
          "line_height": "1.5\u00d7 font size",
          "paragraph_spacing": "1\u00d7 font size",
          "letter_spacing": {
            "tight": "-0.02em for headlines",
            "normal": "0 for body",
            "loose": "0.05em for all caps"
          }
        }
      }
    }
  },
  "layout": {
    "grid_system": {
      "canvas": {
        "width": 1920,
        "height": 1080,
        "aspect_ratio": "16:9",
        "safe_area": {
          "x": 80,
          "y": 80,
          "width": 1760,
          "height": 920
        }
      },
      "margins": {
        "outer": 80,
        "inner": 60,
        "minimum": 40,
        "generous": 120,
        "edge_cases": {
          "full_bleed": 0,
          "breathing_room": 160
        }
      },
      "columns": {
        "single": {
          "x": 80,
          "width": 1760,
          "use_for": "Centered content, full-width elements"
        },
        "halves": {
          "left": {
            "x": 80,
            "width": 880
          },
          "right": {
            "x": 960,
            "width": 880
          },
          "gap": 80,
          "use_for": "Side-by-side content, comparisons"
        },
        "thirds": {
          "columns": [
            {
              "x": 80,
              "width": 560
            },
            {
              "x": 680,
              "width": 560
            },
            {
              "x": 1280,
              "width": 560
            }
          ],
          "gap": 40,
          "use_for": "Three options, triads"
        },
        "golden_ratio": {
          "large": {
            "x": 80,
            "width": 1104
          },
          "small": {
            "x": 1224,
            "width": 616
          },
          "ratio": 1.618
        }
      },
      "snap_points": {
        "x": [
          80,
          240,
          400,
          560,
          720,
          880,
          960,
          1040,
          1200,
          1360,
          1520,
          1680,
          1840
        ],
        "y": [
          80,
          120,
          240,
          360,
          480,
          540,
          600,
          720,
          840,
          960,
          1000
        ]
      }
    },
    "spacing": {
      "component_gaps": {
        "minimum": 40,
        "standard": 60,
        "generous": 80,
        "section_break": 120,
        "Minimum gap between components": 40,
        "Standard component spacing": 60,
        "Text-to-image spacing": 40
      },
      "text_spacing": {
        "title_to_subtitle": 40,
        "title_to_body": 60,
        "paragraph_gap": 40,
        "list_items": 24
      },
      "overlap_prevention": {
        "formula": "comp1.x >= comp2.x + comp2.width + 40",
        "buffer_zones": {
          "text": 40,
          "images": 60,
          "charts": 60
        }
      },
      "overlap_prevention_rules": [
        "NEVER place components where: comp1.x < comp2.x + comp2.width + 40px",
        "NEVER place components where: comp1.y < comp2.y + comp2.height + 40px",
        "Check EVERY component against ALL others before finalizing positions",
        "If components might touch, increase spacing or reduce sizes",
        "Charts and images need extra 20px buffer on all sides",
        "Text components must have minimum 40px from any edge"
      ],
      "edge_validation_rules": [
        "ALL text components: X \u2265 80px AND X + Width \u2264 1840px",
        "ALL text components: Y \u2265 80px AND Y + Height \u2264 1000px",
        "Charts/data: X \u2265 60px AND X + Width \u2264 1860px",
        "Small decorative elements: Minimum 40px from any edge",
        "EXCEPTION: Full-bleed images/backgrounds can touch edges",
        "NEVER allow text within 60px of canvas edge"
      ]
    },
    "positioning": {
      "center_x": "(1920 - width) / 2",
      "center_y": "(1080 - height) / 2",
      "cumulative": "nextY = prevY + prevHeight + gap",
      "alignment_rules": [
        "Align to grid points",
        "Maintain consistent gaps",
        "Group related elements",
        "Create visual hierarchy with position"
      ]
    },
    "advanced": {
      "composition_techniques": {
        "rule_of_thirds": {
          "grid": "3\u00d73 division",
          "placement": "Key elements at intersections",
          "creates": "Dynamic, balanced layouts"
        },
        "golden_ratio": {
          "value": 1.618,
          "applications": {
            "spacing": "Fibonacci sequence",
            "proportions": "61.8% / 38.2% split"
          }
        },
        "diagonal_method": {
          "technique": "45\u00b0 angle guides",
          "creates": "Movement and energy",
          "use_for": "Breaking grid monotony"
        },
        "symmetry_types": {
          "reflection": "Mirror across axis",
          "rotation": "Around center point",
          "translation": "Repeated pattern"
        }
      },
      "whitespace_mastery": {
        "macro_space": {
          "description": "Large areas of emptiness",
          "creates": "Elegance, focus",
          "minimum": "30% of slide"
        },
        "micro_space": {
          "description": "Small gaps between elements",
          "consistency": "Use spacing system",
          "hierarchy": "More space = less related"
        },
        "active_space": {
          "description": "Whitespace that guides eye",
          "techniques": [
            "Leading lines of space",
            "Isolation for emphasis",
            "Breathing room for readability"
          ]
        }
      },
      "responsive_principles": {
        "safe_areas": {
          "projection": "10% margin for variability",
          "different_ratios": "Test 4:3 and 16:10",
          "text_safety": "Keep critical info centered"
        },
        "scalable_layouts": {
          "percentage_based": "Use relative sizing",
          "anchor_points": "Fix to corners/edges",
          "fluid_grids": "Columns that adapt"
        }
      }
    }
  },
  "components": {
    "TiptapTextBlock": {
      "description": "Primary text component - use for 99% of text",
      "required_props": [
        "position",
        "width",
        "height",
        "texts"
      ],
      "critical_rules": {
        "padding": "Must always be 0 (numeric, not string)",
        "texts": "Array of text objects with fontSize, color, etc.",
        "height": "Calculate as fontSize \u00d7 1.2 for single line"
      },
      "best_practices": [
        "Group related text in one component",
        "NEVER use backgroundColor unless absolutely necessary",
        "Combine multiple styles in texts array",
        "Use for tables with small fonts (8pt+)"
      ],
      "common_patterns": {
        "title_subtitle": {
          "texts": [
            {
              "text": "Main Title",
              "fontSize": 96
            },
            {
              "text": "Subtitle",
              "fontSize": 48
            }
          ]
        },
        "card_with_bg": {
          "backgroundColor": "#F0F0F0",
          "borderRadius": "20px",
          "padding": 0
        }
      },
      "examples": [
        "{\n  \"type\": \"TiptapTextBlock\",\n  \"props\": {\n    \"position\": {\"x\": 560, \"y\": 400},\n    \"width\": 800,\n    \"height\": 200,\n    \"backgroundColor\": \"#000000\",\n    \"borderRadius\": \"20px\",\n    \"padding\": 0,\n    \"texts\": [{\n      \"text\": \"Styled Text Block\",\n      \"fontSize\": 48,\n      \"fontFamily\": \"Inter\",\n      \"fontWeight\": \"600\",\n      \"color\": \"#FFFFFF\"\n    }],\n    \"alignment\": \"center\",\n    \"verticalAlignment\": \"middle\"\n  }\n}",
        "// 3-Card Layout WITH TEXT (NO OVERLAPS!)\n// Title at top\n{\"type\": \"TiptapTextBlock\", \"props\": {\"position\": {\"x\": 80, \"y\": 80}, \"width\": 1760, \"height\": 120, \"fontSize\": 96}}\n// Cards below with proper spacing\n[\n  {\"x\": 80, \"y\": 240, \"width\": 560, \"height\": 600},   // Card 1\n  {\"x\": 680, \"y\": 240, \"width\": 560, \"height\": 600},  // Card 2 (40px gap)\n  {\"x\": 1280, \"y\": 240, \"width\": 560, \"height\": 600}  // Card 3 (40px gap)\n]\n// Caption text below cards\n{\"type\": \"TiptapTextBlock\", \"props\": {\"position\": {\"x\": 80, \"y\": 880}, \"width\": 1760, \"height\": 80, \"fontSize\": 48}}\n\n// 4-Image Grid (2x2) WITH PROPER SPACING\n// Title\n{\"type\": \"TiptapTextBlock\", \"props\": {\"position\": {\"x\": 80, \"y\": 80}, \"width\": 1760, \"height\": 100, \"fontSize\": 80}}\n// Images in 2x2 grid\n[\n  {\"x\": 260, \"y\": 220, \"width\": 600, \"height\": 400},  // Top-left\n  {\"x\": 900, \"y\": 220, \"width\": 600, \"height\": 400},  // Top-right (40px gap)\n  {\"x\": 260, \"y\": 660, \"width\": 600, \"height\": 400},  // Bottom-left (40px gap)\n  {\"x\": 900, \"y\": 660, \"width\": 600, \"height\": 400}   // Bottom-right\n]",
        "// HERO STAT (Using TiptapTextBlock - PREFERRED)\n{\n  \"type\": \"TiptapTextBlock\",\n  \"props\": {\n    \"position\": {\"x\": 760, \"y\": 400},\n    \"width\": 400,\n    \"height\": 440,\n    \"texts\": [{\n      \"text\": \"92%\",\n      \"fontSize\": 360,\n      \"fontWeight\": \"900\",\n      \"color\": \"#FF6B6B\"\n    }],\n    \"alignment\": \"center\",\n    \"verticalAlignment\": \"middle\",\n    \"padding\": 0\n  }\n}\n\n// STAT WITH BACKGROUND (Single component - PREFERRED)\n{\n  \"type\": \"TiptapTextBlock\",\n  \"props\": {\n    \"position\": {\"x\": 700, \"y\": 350},\n    \"width\": 520,\n    \"height\": 380,\n    \"backgroundColor\": \"#FFE5E5\",\n    \"borderRadius\": \"40px\",\n    \"texts\": [{\n      \"text\": \"+340%\",\n      \"fontSize\": 280,\n      \"fontWeight\": \"900\",\n      \"color\": \"#FF0000\"\n    }],\n    \"alignment\": \"center\",\n    \"verticalAlignment\": \"middle\",\n    \"padding\": 0\n  }\n}"
      ]
    },
    "Chart": {
      "description": "Data visualization component",
      "required_props": [
        "position",
        "width",
        "height",
        "chartType",
        "data"
      ],
      "positioning_rules": {
        "always": "Left or right half, never center",
        "left": {
          "x": 80,
          "width": 880
        },
        "right": {
          "x": 960,
          "width": 880
        },
        "height": "600-800px optimal"
      },
      "theme_detection": {
        "light_backgrounds": [
          "#FFFFFF",
          "#F8F9FA",
          "#FAFAFA"
        ],
        "dark_backgrounds": [
          "#000000",
          "#1A1A1A",
          "#121212"
        ],
        "set_theme": "Based on Background component color"
      },
      "legend_rules": {
        "bar": false,
        "column": false,
        "pie": false,
        "line": "Only if multiple series",
        "default": false
      },
      "examples": [
        "{\n  \"type\": \"Chart\",\n  \"props\": {\n    \"position\": {\"x\": 80, \"y\": 140},\n    \"width\": 880,\n    \"height\": 700,\n    \"chartType\": \"bar\",\n    \"theme\": \"light\",  // or \"dark\" based on background\n    \"showLegend\": false,  // MANDATORY for bar/column charts\n    \"tickSpacing\": 1,  // Show every label (1 = no skipping)\n    \"tickSpacingY\": 1,  // Show every value (1 = no skipping)\n    \"data\": [\n      {\"name\": \"NES\", \"value\": 61.91, \"color\": \"#0066CC\"},\n      {\"name\": \"SNES\", \"value\": 49.10, \"color\": \"#00AA55\"},\n      {\"name\": \"N64\", \"value\": 32.93, \"color\": \"#FF6B6B\"},\n      {\"name\": \"GameCube\", \"value\": 21.74, \"color\": \"#FFA500\"},\n      {\"name\": \"Wii\", \"value\": 101.63, \"color\": \"#9B59B6\"}\n    ]\n  }\n}"
      ]
    },
    "CustomComponent": {
      "description": "ONLY for animations and special effects",
      "required_props": [
        "position",
        "width",
        "height",
        "render",
        "props"
      ],
      "critical_rules": {
        "render": "Must be escaped string function",
        "syntax": "Use React.createElement, NEVER JSX",
        "template": "function render({ props, state, updateState, id, isThumbnail }) {...}"
      },
      "valid_use_cases": {
        "animated_counter": "Numbers that count up",
        "typewriter": "Text that types itself",
        "particles": "Special visual effects",
        "interactions": "Hover/click states"
      },
      "avoid": [
        "Static text (use TiptapTextBlock)",
        "Simple styling (use TiptapTextBlock)",
        "Basic layouts"
      ],
      "examples": [
        "{\n  \"type\": \"CustomComponent\",\n  \"props\": {\n    \"position\": {\"x\": 560, \"y\": 400},\n    \"width\": 800,\n    \"height\": 200,\n    \"render\": \"function render({ props }, instanceId) {\n      const text = props.mainText || 'Animated Text';\n      const fontSize = props.fontSize || 48;\n      const textColor = props.textColor || '#FFFFFF';\n      const bgColor = props.bgColor || '#000000';\n      const borderRadius = props.borderRadius || 20;\n      \n      return React.createElement('div', {\n        style: {\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: bgColor,\n          borderRadius: borderRadius + 'px',\n          fontSize: fontSize + 'px',\n          color: textColor,\n          padding: '40px',\n          boxSizing: 'border-box'\n        }\n      }, text);\n    }\",\n    \"props\": {\n      \"mainText\": \"Animated Text Here\",\n      \"fontSize\": 48,\n      \"textColor\": \"#FFFFFF\",\n      \"bgColor\": \"#000000\",\n      \"borderRadius\": 20\n    }\n  }\n}"
      ]
    },
    "Image": {
      "description": "Image display component",
      "required_props": [
        "position",
        "width",
        "height",
        "src"
      ],
      "src_rule": "ALWAYS use 'placeholder', never URLs",
      "minimum_sizes": {
        "hero": "1600\u00d7900",
        "feature": "800\u00d7600",
        "card": "400\u00d7500",
        "thumbnail": "200\u00d7200"
      },
      "object_fit_options": {
        "cover": "Default - crops to fill",
        "contain": "Shows entire image",
        "fill": "Stretches to fit"
      }
    },
    "Background": {
      "type": "Background",
      "description": "Start with a background - choose gradient for visual interest or solid color for minimalist design",
      "required_props": [
        "position",
        "width",
        "height",
        "backgroundType",
        "gradient"
      ],
      "default_choice": "GRADIENT (90% of slides)",
      "gradient_mastery": {
        "description": "Gradients create visual magic and professional polish",
        "gradient_patterns": {
          "sophisticated_linear": {
            "description": "Professional depth with diagonal movement",
            "props": {
              "backgroundType": "gradient",
              "gradient": {
                "type": "linear",
                "angle": 135,
                "stops": [
                  {
                    "color": "primary_dark",
                    "position": 0
                  },
                  {
                    "color": "primary_mid",
                    "position": 100
                  }
                ]
              }
            }
          },
          "multi_color_modern": {
            "description": "Bold and contemporary with 3 colors",
            "props": {
              "backgroundType": "gradient",
              "gradient": {
                "type": "linear",
                "angle": 45,
                "stops": [
                  {
                    "color": "primary_dark",
                    "position": 0
                  },
                  {
                    "color": "accent_color",
                    "position": 50
                  },
                  {
                    "color": "primary_mid",
                    "position": 100
                  }
                ]
              }
            }
          },
          "radial_spotlight": {
            "description": "Draw focus to center content",
            "props": {
              "backgroundType": "gradient",
              "gradient": {
                "type": "radial",
                "angle": 0,
                "stops": [
                  {
                    "color": "light_bg",
                    "position": 0
                  },
                  {
                    "color": "light_accent",
                    "position": 70
                  },
                  {
                    "color": "primary_mid",
                    "position": 100
                  }
                ]
              }
            }
          },
          "animated_premium": {
            "description": "Subtle movement for high-end feel",
            "props": {
              "backgroundType": "gradient",
              "gradient": {
                "type": "linear",
                "angle": 270,
                "stops": [
                  {
                    "color": "primary_dark",
                    "position": 0
                  },
                  {
                    "color": "accent_color",
                    "position": 100
                  }
                ]
              },
              "isAnimated": true,
              "animationSpeed": 0.5
            }
          }
        }
      },
      "design_patterns": {
        "sunrise_sunset": {
          "angle": 0,
          "description": "Vertical gradient creating horizon effect",
          "colors": "Dark bottom \u2192 Light top"
        },
        "diagonal_energy": {
          "angle": "45 or 135",
          "description": "Dynamic, modern feel",
          "colors": "Contrasting palette colors"
        },
        "radial_focus": {
          "type": "radial",
          "description": "Draws eye to center content",
          "colors": "Light center \u2192 Dark edges"
        },
        "subtle_texture": {
          "angle": 90,
          "description": "Barely visible, adds depth",
          "colors": "Close colors: light_accent \u2192 light_bg"
        },
        "bold_statement": {
          "description": "Makes slide memorable",
          "colors": "High contrast: primary_dark \u2192 accent_color",
          "stops": "Multiple for complexity"
        }
      },
      "color_combinations": [
        "Professional: primary_dark \u2192 primary_mid",
        "Creative: accent_color \u2192 primary_mid \u2192 light_accent",
        "Subtle: light_bg \u2192 light_accent",
        "Bold: primary_dark \u2192 accent_color",
        "Soft: light_accent \u2192 light_bg \u2192 white"
      ],
      "best_practices": [
        "\ud83d\udea8 ALWAYS use gradients (90% of slides)",
        "NO single solid colors unless intentional minimalism",
        "Use palette colors for cohesion",
        "Consider content contrast needs",
        "Match gradient mood to slide purpose",
        "Use animation sparingly for impact",
        "3 colors maximum for gradients",
        "Test readability with your gradient choice"
      ],
      "avoid": [
        "Single solid colors (boring!)",
        "Jarring color combinations",
        "Overly complex gradients (3+ colors)",
        "Animated gradients on text-heavy slides"
      ],
      "examples": [
        {
          "use_case": "Default professional slide",
          "props": {
            "position": {
              "x": 0,
              "y": 0
            },
            "width": 1920,
            "height": 1080,
            "backgroundType": "gradient",
            "gradient": {
              "type": "linear",
              "angle": 135,
              "stops": [
                {
                  "color": "#1E3A5F",
                  "position": 0
                },
                {
                  "color": "#4A7BA7",
                  "position": 100
                }
              ]
            }
          }
        },
        {
          "use_case": "Creative impact slide",
          "props": {
            "position": {
              "x": 0,
              "y": 0
            },
            "width": 1920,
            "height": 1080,
            "backgroundType": "gradient",
            "gradient": {
              "type": "linear",
              "angle": 45,
              "stops": [
                {
                  "color": "#FF6B6B",
                  "position": 0
                },
                {
                  "color": "#4A7BA7",
                  "position": 50
                },
                {
                  "color": "#8FBCDB",
                  "position": 100
                }
              ]
            },
            "isAnimated": true,
            "animationSpeed": 0.3
          }
        }
      ]
    },
    "shapes_with_text": {
      "option_1": {
        "name": "TiptapTextBlock with backgroundColor",
        "description": "TiptapTextBlock with backgroundColor (RECOMMENDED for text in shapes)"
      },
      "option_2": {
        "name": "TextBlock with backgroundColor",
        "description": "TextBlock with backgroundColor (alternative)"
      },
      "option_3": {
        "name": "CustomComponent",
        "description": "CustomComponent (ONLY for special effects/animations)"
      },
      "key_rules": [
        "ALWAYS use a single component when text goes inside a shape",
        "TiptapTextBlock WITHOUT backgroundColor is the PREFERRED option for regular text",
        "Only use CustomComponent for animated or interactive text effects",
        "Text should be centered by default using alignment properties",
        "Include all styling (colors, borders, padding) in the single component",
        "AVOID decorative shapes - let content and images be the focus"
      ]
    }
  },
  "chart_guidelines": {
    "dimensions": [
      "Left half chart: 880px wide \u00d7 800px+ tall (X=80)",
      "Right half chart: 880px wide \u00d7 800px+ tall (X=960)",
      "NO VERTICAL LAYOUTS! Always side-by-side with text",
      "Chart takes exactly HALF the slide width",
      "NEVER make a chart smaller than 800\u00d7600px!"
    ],
    "positioning": [
      "Left side: X=80, Y=140-240, Width=880, Height=600-800",
      "Right side: X=960, Y=140-240, Width=880, Height=600-800",
      "NO center positioning - always pick a side!",
      "NO full-width charts - text needs its half!"
    ],
    "configuration": {
      "BAR/COLUMN CHARTS": "MUST set showLegend: false (legends are redundant)",
      "PIE CHARTS": "MUST set showLegend: false (use data labels instead)",
      "LINE CHARTS": "Only show legends if 2+ series, otherwise showLegend: false",
      "SCATTER/BUBBLE": "MUST set showLegend: false unless multiple categories",
      "DEFAULT RULE": "Always start with showLegend: false"
    },
    "theme_detection": [
      "If slide background is light (#FFFFFF, #F8F9FA, etc.) \u2192 use `\"theme\": \"light\"`",
      "If slide background is dark (#000000, #1A1A1A, etc.) \u2192 use `\"theme\": \"dark\"`",
      "If background uses accent colors \u2192 determine based on luminance",
      "Default to \"light\" if uncertain"
    ],
    "legend_rules": {
      "BAR CHARTS": "ALWAYS set showLegend: false",
      "COLUMN CHARTS": "ALWAYS set showLegend: false",
      "PIE CHARTS": "Use data labels instead (showLegend: false)",
      "LINE CHARTS": "Only show legend if multiple series (2+)",
      "Default": "When in doubt, set showLegend: false"
    },
    "tick_spacing": {
      "tickSpacing": "Controls X-axis label skipping (1 = show all, 2 = every 2nd, etc.)",
      "tickSpacingY": "Controls Y-axis label skipping (1 = show all, 2 = every 2nd, etc.)",
      "DEFAULT TO 1": "Unless you have 20+ data points, always use tickSpacing of 1",
      "Maximum values": "Never exceed 5 for tick spacing unless you have 50+ points"
    }
  },
  "image_guidelines": {
    "enhanced": {
      "composition_rules": {
        "rule_of_thirds": "Place subjects at intersections",
        "leading_lines": "Guide eye to focal point",
        "framing": "Use natural frames",
        "symmetry": "For formal, balanced feel",
        "patterns": "For visual interest"
      },
      "treatment_techniques": {
        "overlays": {
          "gradient": {
            "linear": "Top-down for text at bottom",
            "radial": "Center focus vignette",
            "directional": "Guide eye movement"
          },
          "color": {
            "brand": "Unify with brand color",
            "duotone": "Two-color treatment",
            "multiply": "Darken for text"
          }
        },
        "filters": {
          "blur": {
            "background": "3-5px for depth",
            "foreground": "Selective focus"
          },
          "color_grading": {
            "warm": "Orange/yellow tint",
            "cool": "Blue/green tint",
            "desaturated": "Professional look"
          }
        },
      "masks": {
        "geometric": "Circle, hexagon, etc.",
        "organic": "Blob, wave shapes",
        "text": "Image inside letters",
        "critical_rules": [
          "Circle mask requires square container: width === height to avoid side cropping",
          "When applying circle mask, set width = height = min(current width, current height) and center",
          "Then use objectFit: 'cover' to fill the circular frame without stretching"
        ]
      }
      },
      "layout_systems": {
        "editorial": {
          "full_bleed": "Edge to edge impact",
          "margin_wrap": "Text flows around",
          "cutout": "Subject extends out"
        },
        "grid_based": {
          "modular": "Consistent sizing",
          "masonry": "Pinterest-style varied",
          "mosaic": "Artistic arrangement"
        },
        "asymmetric": {
          "off_center": "Dynamic tension",
          "overlapping": "Layered depth",
          "diagonal": "Energy and movement"
        }
      }
    },
    "minimum_sizes": {
      "Hero image": "1920\u00d71080 (full bleed) or 1600\u00d7900 (with margins)",
      "Feature image": "800\u00d7600 minimum, prefer 1000\u00d7750",
      "Card layouts": "400\u00d7500 minimum per card"
    },
    "layout_patterns": {
      "Full Bleed Hero": "1920\u00d71080, overlay text with gradients",
      "Magazine Spread": "Image 1200px wide, text in remaining space",
      "Staggered Cards": "3 images, different sizes (600\u00d7700, 500\u00d7600, 550\u00d7650)",
      "Masonry Layout": "Multiple images, varying heights, magazine style"
    }
  },
  "validation_rules": {
    "rules": [
      "Never set properties to null - omit them instead",
      "Text padding must be numeric 0, not \"0px\"",
      "Always use colors from the provided theme",
      "Always use fonts from the provided theme",
      "Shape gradients: omit if not needed, don't set to null",
      "Lines controlPoints: must be an array of points, never null"
    ]
  },
  "component_combinations": {
    "text_on_image": {
      "components": [
        "Image",
        "TiptapTextBlock"
      ],
      "technique": "Image with gradient overlay, text on top",
      "overlay_options": {
        "gradient": "Linear gradient with 60-80% opacity",
        "solid": "Black at 60% opacity",
        "blur": "Backdrop blur for glassmorphism"
      }
    },
    "data_with_insight": {
      "components": [
        "Chart",
        "TiptapTextBlock"
      ],
      "layout": "Chart on one half, insights on other",
      "content_strategy": "Chart shows what, text explains why"
    },
    "card_grid": {
      "components": [
        "TiptapTextBlock",
        "Image",
        "Shape"
      ],
      "layouts": {
        "3_cards": "560px wide each, 40px gaps",
        "4_cards": "400px wide, 2\u00d72 grid"
      }
    }
  },
  "design_patterns": {
    "title_slides": {
      "hero_centered": {
        "description": "Massive centered title",
        "components": [
          "Background",
          "TiptapTextBlock"
        ],
        "typography": {
          "size": "400-600pt",
          "weight": "900",
          "alignment": "center"
        },
        "tips": [
          "Use full-bleed background image",
          "Add gradient overlay for contrast",
          "Keep it to 1-5 words max"
        ]
      },
      "split_screen": {
        "description": "Text and image side by side",
        "components": [
          "Background",
          "Image",
          "TiptapTextBlock"
        ],
        "layout": {
          "image": "Right half (960px wide)",
          "text": "Left half, vertically centered"
        }
      },
      "corner_accent": {
        "description": "Title with decorative element",
        "components": [
          "Background",
          "TiptapTextBlock",
          "Shape"
        ],
        "placement": "Title offset, shape in corner"
      }
    },
    "content_slides": {
      "bullet_points": {
        "description": "Classic list format",
        "typography": {
          "title": "96-120pt",
          "bullets": "48-64pt",
          "spacing": "24px between items"
        },
        "enhancements": [
          "Use icons instead of bullets",
          "Reveal points progressively",
          "Color-code by category"
        ]
      },
      "comparison": {
        "description": "Side-by-side comparison",
        "layouts": {
          "two_column": "Equal halves with divider",
          "versus": "Dramatic split with VS in center",
          "table": "Structured comparison grid"
        }
      },
      "process_flow": {
        "description": "Step-by-step visualization",
        "components": [
          "TiptapTextBlock",
          "Shape",
          "CustomComponent"
        ],
        "options": [
          "Horizontal arrow flow",
          "Vertical timeline",
          "Circular process"
        ]
      }
    },
    "data_slides": {
      "single_chart_focus": {
        "description": "One chart with insights",
        "layout": "Chart left/right, text opposite",
        "chart_size": "880\u00d7700px",
        "text_content": [
          "Key insight as title",
          "3-4 bullet points explaining",
          "Call-to-action if needed"
        ]
      },
      "dashboard": {
        "description": "Multiple data points",
        "components": [
          "Chart",
          "TiptapTextBlock",
          "CustomComponent"
        ],
        "arrangements": [
          "2\u00d72 grid of smaller charts",
          "One main chart + 3 KPIs",
          "Stats row + supporting chart"
        ]
      },
      "stat_hero": {
        "description": "Single statistic emphasis",
        "typography": "300-600pt for number",
        "enhancements": [
          "Animated counter",
          "Progress visualization",
          "Comparison context"
        ]
      }
    },
    "closing_slides": {
      "cta": {
        "description": "Call to action",
        "components": [
          "TiptapTextBlock",
          "Shape"
        ],
        "styling": {
          "action": "Large button-style shape",
          "text": "96-144pt, high contrast",
          "placement": "Centered or bottom third"
        }
      },
      "thank_you": {
        "description": "Closing gratitude",
        "variations": [
          "Simple centered text",
          "With contact info",
          "With QR code"
        ]
      },
      "questions": {
        "description": "Q&A slide",
        "styling": "Large '?' or 'Questions?' text",
        "additions": "Contact info, social handles"
      }
    }
  },
  "color_theory": {
    "psychology": {
      "red": {
        "emotions": [
          "Energy",
          "Urgency",
          "Passion",
          "Danger"
        ],
        "physiological": "Increases heart rate",
        "use_for": [
          "CTAs",
          "Warnings",
          "Sales",
          "Food"
        ],
        "cultural_notes": "Lucky in China, danger in West"
      },
      "blue": {
        "emotions": [
          "Trust",
          "Calm",
          "Professional",
          "Cold"
        ],
        "physiological": "Lowers blood pressure",
        "use_for": [
          "Corporate",
          "Tech",
          "Finance",
          "Healthcare"
        ],
        "shades": {
          "navy": "Authority, tradition",
          "sky": "Freedom, optimism",
          "teal": "Clarity, communication"
        }
      },
      "green": {
        "emotions": [
          "Growth",
          "Nature",
          "Money",
          "Health"
        ],
        "physiological": "Easiest on eyes",
        "use_for": [
          "Environment",
          "Finance",
          "Health",
          "Organic"
        ],
        "shades": {
          "forest": "Stability, wealth",
          "lime": "Energy, freshness",
          "mint": "Calm, cleanliness"
        }
      },
      "yellow": {
        "emotions": [
          "Happiness",
          "Caution",
          "Energy"
        ],
        "physiological": "Stimulates mental activity",
        "use_for": [
          "Warnings",
          "Children",
          "Optimism"
        ],
        "note": "Use sparingly - can cause strain"
      },
      "purple": {
        "emotions": [
          "Luxury",
          "Creativity",
          "Mystery"
        ],
        "historical": "Royalty (expensive dye)",
        "use_for": [
          "Premium",
          "Beauty",
          "Spiritual"
        ]
      },
      "orange": {
        "emotions": [
          "Friendly",
          "Confident",
          "Cheerful"
        ],
        "physiological": "Stimulates activity",
        "use_for": [
          "CTA buttons",
          "Sports",
          "Youth"
        ]
      },
      "black": {
        "emotions": [
          "Sophistication",
          "Power",
          "Elegance"
        ],
        "use_for": [
          "Luxury",
          "Fashion",
          "Tech"
        ],
        "tip": "Rarely pure black - use #0A0A0A"
      },
      "white": {
        "emotions": [
          "Purity",
          "Space",
          "Cleanliness"
        ],
        "use_for": [
          "Minimal",
          "Health",
          "Tech"
        ],
        "tip": "Off-white (#FAFAFA) easier on eyes"
      }
    },
    "color_schemes": {
      "monochromatic": {
        "description": "Single hue, varied lightness/saturation",
        "formula": "Base + tints/shades",
        "mood": "Cohesive, sophisticated",
        "example": [
          "#0066CC",
          "#3385D6",
          "#6699E0",
          "#99BBEB",
          "#CCE0F5"
        ]
      },
      "analogous": {
        "description": "Adjacent on color wheel",
        "formula": "Base \u00b1 30\u00b0",
        "mood": "Harmonious, natural",
        "example": [
          "Blue",
          "Blue-violet",
          "Violet"
        ]
      },
      "complementary": {
        "description": "Opposite on wheel",
        "formula": "Base + 180\u00b0",
        "mood": "High contrast, vibrant",
        "tip": "Use 80/20 ratio"
      },
      "split_complementary": {
        "description": "Base + two adjacent to complement",
        "formula": "Base, (complement \u00b1 30\u00b0)",
        "mood": "Vibrant but less tension"
      },
      "triadic": {
        "description": "Three equidistant colors",
        "formula": "Base + 120\u00b0 + 240\u00b0",
        "mood": "Vibrant, balanced",
        "ratio": "60-30-10"
      },
      "tetradic": {
        "description": "Two complementary pairs",
        "formula": "Rectangle on wheel",
        "mood": "Rich, complex",
        "warning": "Difficult to balance"
      }
    },
    "practical_application": {
      "60_30_10_rule": {
        "60%": "Dominant/background (usually neutral)",
        "30%": "Secondary/support (brand color)",
        "10%": "Accent/CTA (high contrast)"
      },
      "contrast_hierarchy": {
        "highest": "CTA buttons, key stats",
        "high": "Headings, important info",
        "medium": "Body text, standard elements",
        "low": "Decorative, backgrounds"
      },
      "accessibility_safe": {
        "combinations": [
          {
            "bg": "#FFFFFF",
            "text": "#000000",
            "ratio": 21
          },
          {
            "bg": "#000000",
            "text": "#FFFFFF",
            "ratio": 21
          },
          {
            "bg": "#FFFFFF",
            "text": "#595959",
            "ratio": 7.0
          },
          {
            "bg": "#000000",
            "text": "#969696",
            "ratio": 7.0
          }
        ],
        "tools": [
          "WebAIM Contrast Checker",
          "Stark",
          "Able"
        ]
      }
    }
  },
  "emphasis_techniques": {
    "size_contrast": {
      "ratios": {
        "subtle": "1.5\u00d7",
        "moderate": "2-3\u00d7",
        "dramatic": "4-5\u00d7",
        "extreme": "8-10\u00d7"
      },
      "application": "Make important elements 2-3\u00d7 larger"
    },
    "color_emphasis": {
      "techniques": {
        "isolation": "One color in grayscale",
        "contrast": "Complementary color",
        "saturation": "Bright vs muted",
        "temperature": "Warm vs cool"
      }
    },
    "spatial_emphasis": {
      "isolation": {
        "description": "Surround with whitespace",
        "minimum_space": "2\u00d7 element size",
        "creates": "Immediate focus"
      },
      "positioning": {
        "center": "Natural focal point",
        "golden_ratio": "Pleasing off-center",
        "rule_of_thirds": "Dynamic placement"
      }
    },
    "motion_emphasis": {
      "entrance": {
        "fade": "Subtle appearance",
        "slide": "Directional attention",
        "scale": "Growing importance",
        "rotate": "Playful energy"
      },
      "continuous": {
        "pulse": "Breathing effect",
        "float": "Gentle movement",
        "rotate": "Constant motion"
      }
    },
    "statistical_emphasis": {
      "techniques": {
        "isolation": "Number alone on slide",
        "comparison": "Before/after",
        "visualization": "Chart or icon",
        "animation": "Counting up"
      },
      "formatting": {
        "large_numbers": "Use K, M, B",
        "decimals": "Max 1-2 places",
        "context": "Always provide",
        "color": "Green up, red down"
      }
    }
  },
  "animation": {
    "principles": {
      "timing": {
        "instant": "0-100ms - immediate feedback",
        "fast": "200-300ms - UI transitions",
        "normal": "400-500ms - content entrance",
        "slow": "600-1000ms - dramatic effect",
        "very_slow": "1000-2000ms - complex sequences"
      },
      "easing": {
        "linear": "Constant speed - mechanical",
        "ease_in": "Slow start - anticipation",
        "ease_out": "Slow end - natural stop",
        "ease_in_out": "S-curve - smooth",
        "spring": "Bounce - playful",
        "custom_bezier": "Brand-specific curves"
      },
      "properties": {
        "transform": "Position, scale, rotate - GPU accelerated",
        "opacity": "Fade effects - smooth",
        "filter": "Blur, brightness - expensive",
        "path": "SVG animations - complex"
      }
    },
    "choreography": {
      "sequential": {
        "description": "One after another",
        "delay_between": "50-200ms",
        "use_for": "List reveals, steps"
      },
      "parallel": {
        "description": "All together",
        "synchronization": "Same duration",
        "use_for": "Related elements"
      },
      "staggered": {
        "description": "Overlapping cascade",
        "overlap": "30-70%",
        "creates": "Smooth flow"
      }
    },
    "purpose_driven": {
      "attention": {
        "pulse": "Subtle size change",
        "shake": "Horizontal movement",
        "bounce": "Vertical movement"
      },
      "transition": {
        "crossfade": "Scene changes",
        "slide": "Linear progression",
        "zoom": "Detail focus"
      },
      "feedback": {
        "success": "Green checkmark draw",
        "error": "Red shake",
        "loading": "Spinner or progress"
      }
    },
    "performance": {
      "optimize": [
        "Use transform over position",
        "Animate opacity carefully",
        "Avoid animating layout properties",
        "Use will-change sparingly"
      ],
      "test": [
        "On slower devices",
        "With multiple animations",
        "During transitions"
      ]
    }
  },
  "best_practices": {
    "design_process": {
      "content_first": [
        "Understand the message",
        "Identify key points",
        "Structure narrative",
        "Then design"
      ],
      "audience_centered": [
        "Consider viewing distance",
        "Account for environment",
        "Match expectations",
        "Test readability"
      ],
      "iterative": [
        "Start with wireframes",
        "Get feedback early",
        "Refine progressively",
        "Test on device"
      ]
    },
    "visual_hierarchy": {
      "techniques": {
        "size": "Bigger = more important",
        "color": "Contrast draws attention",
        "space": "Isolation emphasizes",
        "position": "Top/center prioritized",
        "style": "Bold, italic, underline"
      },
      "scanning_patterns": {
        "F_pattern": "Top-left to right, down",
        "Z_pattern": "Diagonal scanning",
        "focal_point": "Natural center attention"
      }
    },
    "consistency": {
      "maintain": [
        "Color palette throughout",
        "Font families (max 2)",
        "Spacing system",
        "Visual style",
        "Animation timing"
      ],
      "vary": [
        "Layouts for interest",
        "Emphasis techniques",
        "Content density"
      ]
    },
    "common_mistakes": {
      "typography": [
        "Too small for viewing distance",
        "Poor contrast with background",
        "Too many fonts",
        "Centered body text",
        "Inconsistent sizing"
      ],
      "layout": [
        "Overcrowding",
        "Inconsistent margins",
        "No visual hierarchy",
        "Random positioning",
        "Ignoring alignment"
      ],
      "color": [
        "Too many colors",
        "Clashing combinations",
        "Poor contrast",
        "Ignoring brand",
        "No consistency"
      ],
      "content": [
        "Too much text",
        "No clear message",
        "Missing context",
        "Jargon overload",
        "No call to action"
      ]
    },
    "quality_checklist": [
      "Is the main message clear?",
      "Can it be read from back of room?",
      "Does it follow brand guidelines?",
      "Is there visual hierarchy?",
      "Are animations purposeful?",
      "Is it accessible?",
      "Does it tell a story?"
    ]
  },
  "accessibility": {
    "color_contrast": {
      "WCAG_levels": {
        "AAA": {
          "normal_text": 7.0,
          "large_text": 4.5,
          "description": "Enhanced level"
        },
        "AA": {
          "normal_text": 4.5,
          "large_text": 3.0,
          "description": "Minimum level"
        }
      },
      "testing_tools": [
        "WebAIM Contrast Checker",
        "Stark (Figma/Sketch)",
        "Chrome DevTools",
        "Wave"
      ],
      "safe_combinations": [
        {
          "bg": "#FFFFFF",
          "text": "#000000",
          "ratio": 21
        },
        {
          "bg": "#000000",
          "text": "#FFFFFF",
          "ratio": 21
        },
        {
          "bg": "#FFFFFF",
          "text": "#595959",
          "ratio": 7.0
        },
        {
          "bg": "#000000",
          "text": "#969696",
          "ratio": 7.0
        }
      ]
    },
    "typography": {
      "minimum_sizes": {
        "presentation": "24pt absolute minimum",
        "handout": "12pt minimum",
        "captions": "14pt minimum"
      },
      "readability": {
        "fonts": "Sans-serif preferred",
        "line_height": "1.5\u00d7 minimum",
        "line_length": "45-75 characters",
        "justification": "Left-align body text"
      }
    },
    "color_blindness": {
      "types": {
        "protanopia": "No red",
        "deuteranopia": "No green",
        "tritanopia": "No blue",
        "achromatopsia": "No color"
      },
      "strategies": [
        "Don't rely on color alone",
        "Use patterns or labels",
        "Test with simulators",
        "High contrast always works"
      ]
    },
    "motion": {
      "considerations": [
        "Respect prefers-reduced-motion",
        "Provide pause controls",
        "No flashing >3Hz",
        "Essential info not only in animation"
      ]
    },
    "screen_readers": {
      "support": [
        "Logical reading order",
        "Descriptive alt text",
        "Proper heading hierarchy",
        "Meaningful link text"
      ]
    }
  },
  "critical_rules_summary": {
    "text_sizing": "Use character-based sizing: 1-10 chars=320-480pt, 11-20=240-360pt, 21-40=180-240pt, 41-80=120-160pt, 80+=48-80pt",
    "height_calculation": "Single line: fontSize \u00d7 1.2, Multi-line: fontSize \u00d7 lines \u00d7 1.3, Always add 10-20% buffer",
    "chart_positioning": "ALWAYS left (x=80) or right (x=960) half, NEVER center, 880px wide",
    "chart_legends": "ALWAYS false for bar/column/pie charts, only show for multi-series line charts",
    "overlap_prevention": "Minimum 40px gap between all components, 60px for charts/images",
          "edge_margins": "Text must be 80px from edges, charts 60px, images can be full-bleed",
      "image_boundaries": "CRITICAL: x + width <= 1920, y + height <= 1080. Right-aligned images: max width = 1920 - x",
    "shapes_with_text": "ALWAYS use single component (TiptapTextBlock WITHOUT backgroundColor)",
    "image_minimum": "Hero: 1600\u00d7900, Feature: 800\u00d7600, Cards: 400\u00d7500 minimum",
    "icon_usage": "Use content-specific icons from libraries (lucide, heroicons, feather, tabler), avoid generic Star/Circle, sizes: 24px inline, 32px bullets, 48px features, 72px hero"
  },
  "icon_guidelines": {
    "icon_comprehensive_guide": {
      "description": "Complete guide for using icons effectively in presentations",
      "implementation": {
        "type": "CustomComponent",
        "required_props": [
          "position",
          "width",
          "height",
          "render",
          "props"
        ],
        "render_template": "function render({ props }, instanceId) { const iconLibrary = window[props.library + 'React'] || window.lucideReact; const IconComponent = iconLibrary[props.iconName]; return React.createElement('div', { style: { width: '100%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', color: props.color } }, React.createElement(IconComponent, { size: props.size })); }"
      },
      "content_specific_icons": {
        "features_and_benefits": {
          "primary": [
            "Zap",
            "Award",
            "Shield",
            "Rocket",
            "Target"
          ],
          "secondary": [
            "Lightbulb",
            "Trophy",
            "Diamond",
            "Crown",
            "Sparkles"
          ],
          "avoid": [
            "Star",
            "Circle",
            "Square"
          ]
        },
        "metrics_and_data": {
          "growth": [
            "TrendingUp",
            "ArrowUp",
            "BarChart3"
          ],
          "decline": [
            "TrendingDown",
            "ArrowDown"
          ],
          "time": [
            "Clock",
            "Timer",
            "Calendar"
          ],
          "people": [
            "Users",
            "UserCheck",
            "UserPlus"
          ],
          "money": [
            "DollarSign",
            "CreditCard",
            "Banknote",
            "Coins"
          ]
        },
        "processes_and_steps": {
          "sequential": [
            "ArrowRight",
            "ChevronRight",
            "MoveRight"
          ],
          "cyclic": [
            "RefreshCw",
            "Repeat",
            "RotateCw"
          ],
          "checkpoints": [
            "CheckCircle",
            "CircleCheck",
            "Check"
          ],
          "warnings": [
            "AlertTriangle",
            "AlertCircle",
            "Info"
          ]
        },
        "technology_and_innovation": {
          "ai_ml": [
            "Brain",
            "Cpu",
            "Bot",
            "Sparkles"
          ],
          "cloud": [
            "Cloud",
            "CloudUpload",
            "Database"
          ],
          "security": [
            "Shield",
            "Lock",
            "Key",
            "ShieldCheck"
          ],
          "development": [
            "Code",
            "Terminal",
            "GitBranch",
            "Layers"
          ]
        },
        "communication": {
          "messaging": [
            "MessageSquare",
            "Mail",
            "Send",
            "MessageCircle"
          ],
          "collaboration": [
            "Users",
            "UserPlus",
            "Share2",
            "Network"
          ],
          "global": [
            "Globe",
            "Map",
            "MapPin",
            "Navigation"
          ]
        },
        "achievements": {
          "success": [
            "Trophy",
            "Award",
            "Medal",
            "Crown"
          ],
          "milestones": [
            "Flag",
            "Target",
            "Milestone",
            "Pin"
          ],
          "quality": [
            "Gem",
            "Diamond",
            "Star",
            "Sparkles"
          ]
        }
      },
      "icon_selection_rules": {
        "context_matching": {
          "rule": "ALWAYS choose icons that reinforce the content meaning",
          "examples": [
            "Security feature \u2192 Shield or Lock, NOT Star",
            "Growth metric \u2192 TrendingUp or ArrowUp, NOT Circle",
            "Time savings \u2192 Clock or Timer, NOT generic icon"
          ]
        },
        "variety_enforcement": {
          "rule": "NEVER use the same icon more than twice per slide",
          "strategy": "Use content-based selection to ensure variety",
          "fallback_progression": [
            "Primary icon for main concept",
            "Secondary icon for related items",
            "Tertiary icon for additional points"
          ]
        },
        "size_hierarchy": {
          "hero_icon": {
            "size": 72,
            "use": "Main feature or concept"
          },
          "section_icon": {
            "size": 48,
            "use": "Section headers, feature cards"
          },
          "list_icon": {
            "size": 32,
            "use": "Bullet replacements, small indicators"
          },
          "inline_icon": {
            "size": 24,
            "use": "Within text, subtle accents"
          }
        }
      },
      "layout_patterns": {
        "feature_cards": {
          "structure": "Icon centered above title",
          "icon_size": 48,
          "spacing": "24px between icon and text",
          "color": "Use primary_accent or secondary_accent"
        },
        "list_enhancements": {
          "structure": "Icon aligned with text start",
          "icon_size": 32,
          "spacing": "16px between icon and text",
          "alignment": "Center icon vertically with first line"
        },
        "stat_displays": {
          "structure": "Small icon next to large number",
          "icon_size": 24,
          "position": "Top-right or inline with number",
          "purpose": "Indicate what the number represents"
        },
        "process_flows": {
          "structure": "Icons connected by arrows or lines",
          "icon_size": 48,
          "connector": "Use Arrow icons between steps",
          "spacing": "Equal distance between icons"
        }
      },
      "color_strategies": {
        "monochrome": {
          "when": "Subtle, professional presentations",
          "color": "text_color with 0.7-0.9 opacity"
        },
        "accent_highlights": {
          "when": "Draw attention to key points",
          "color": "primary_accent or secondary_accent"
        },
        "gradient_icons": {
          "when": "Premium, modern feel",
          "implementation": "CSS gradient on icon color"
        },
        "themed": {
          "when": "Consistent with deck theme",
          "strategy": "Match icon colors to theme palette"
        }
      },
      "library_recommendations": {
        "lucide": {
          "best_for": "Professional, corporate presentations",
          "characteristics": "Consistent 2px stroke, minimal design",
          "icon_count": "300+ icons",
          "recommended_icons": [
            "Briefcase",
            "TrendingUp",
            "Users",
            "Target",
            "Award"
          ]
        },
        "heroicons": {
          "best_for": "Versatile, all-purpose use",
          "characteristics": "Balanced design, good variety",
          "icon_count": "200+ icons",
          "recommended_icons": [
            "Lightning",
            "Shield",
            "Chart",
            "Star",
            "Flag"
          ]
        },
        "tabler": {
          "best_for": "Technical, detailed presentations",
          "characteristics": "Comprehensive set, technical focus",
          "icon_count": "3000+ icons",
          "recommended_icons": [
            "Database",
            "Code",
            "Server",
            "Analytics",
            "Settings"
          ]
        },
        "feather": {
          "best_for": "Creative, elegant presentations",
          "characteristics": "Light stroke, sophisticated",
          "icon_count": "280+ icons",
          "recommended_icons": [
            "Feather",
            "Compass",
            "Aperture",
            "Layers",
            "Zap"
          ]
        }
      },
      "common_mistakes": {
        "overuse": {
          "problem": "Too many icons cluttering the slide",
          "solution": "Limit to 3-5 meaningful icons per slide"
        },
        "default_fallback": {
          "problem": "Always using Star or Circle icons",
          "solution": "Choose content-specific icons from the extensive library"
        },
        "size_inconsistency": {
          "problem": "Random icon sizes breaking visual hierarchy",
          "solution": "Stick to defined size categories (24, 32, 48, 72)"
        },
        "poor_contrast": {
          "problem": "Icons disappearing on gradient backgrounds",
          "solution": "Test contrast, add subtle shadow or outline if needed"
        }
      },
      "advanced_techniques": {
        "icon_animations": {
          "hover_effects": "Scale or rotate on interaction",
          "entrance": "Fade in or slide in with content",
          "emphasis": "Pulse or bounce for attention"
        },
        "icon_combinations": {
          "overlapping": "Layer icons for compound meanings",
          "sequences": "Create icon stories across slides",
          "transformations": "Morph between related icons"
        },
        "custom_styling": {
          "stroke_width": "Adjust for emphasis",
          "partial_fills": "Show progress or completion",
          "color_transitions": "Animate between states"
        }
      },
      "slide_type_recommendations": {
        "title_slides": {
          "usage": "Minimal or none",
          "if_used": "Single large icon as visual anchor"
        },
        "feature_slides": {
          "usage": "One icon per feature",
          "layout": "Icon above or beside feature title"
        },
        "comparison_slides": {
          "usage": "Icons to differentiate options",
          "layout": "Consistent icon placement for each option"
        },
        "data_slides": {
          "usage": "Support metrics with meaning",
          "layout": "Small icons near numbers or charts"
        },
        "process_slides": {
          "usage": "Icon for each step",
          "layout": "Linear or circular arrangement"
        }
      },
      "accessibility_considerations": {
        "aria_labels": "Always include descriptive labels",
        "color_independence": "Icons should work in grayscale",
        "size_minimums": "24x24px for recognition",
        "contrast_ratios": "Meet WCAG AA standards"
      }
    }
  },
  "slide_generation_prompts": {
    "visual_storytelling_approach": "You are a WORLD-CLASS VISUAL STORYTELLER transforming boring text into STUNNING presentations.\n\n\ud83c\udfa8 YOUR CANVAS:\nTitle: {slide_outline.title}\nContent: {slide_outline.content}\n\n\ud83d\ude80 TRANSFORMATION MISSION - NEVER JUST DISPLAY TEXT, TELL VISUAL STORIES:\n\n1. **FIND THE STORY** - What's the emotional core?\n   - Numbers aren't data, they're ACHIEVEMENTS\n   - Processes aren't steps, they're JOURNEYS\n   - Features aren't bullets, they're SUPERPOWERS\n   - Comparisons aren't facts, they're BATTLES\n\n2. **VISUAL HIERARCHY THAT SCREAMS**:\n   - Hero element: 300-800pt (YES, THAT BIG!)\n   - Supporting stars: 120-240pt\n   - Context whispers: 48-72pt\n   - Make important things IMPOSSIBLY large\n\n3. **LAYOUT AS NARRATIVE**:\n   - Ascending = Growth story\n   - Circular = Complete journey\n   - Scattered = Creative chaos\n   - Diagonal = Dynamic tension\n   - Split screen = Dramatic comparison\n\n4. **COLOR AS EMOTION**:\n   - {primary_dark} to {primary_mid} = Gradient sophistication\n   - {accent_color} = Your HERO moments\n   - {light_accent} = Subtle depth and cards\n   - {light_bg} = Breathing space\n   - {text_color} = Let it breathe or SHOUT\n\n5. **MANDATORY TRANSFORMATIONS**:\n   - \"We grew 45%\" \u2192 GIANT \"45%\" filling half the slide\n   - \"3 key features\" \u2192 3 MASSIVE cards with icons\n   - \"Process steps\" \u2192 Visual journey/timeline/ascension\n   - \"Comparison\" \u2192 David vs Goliath visual drama\n   - \"Quote\" \u2192 Typography art piece\n\n\ud83c\udfaf DESIGN PATTERNS TO USE:\n- **Hero Statistics**: Single number becomes entire design (400-800pt)\n- **Magazine Editorial**: Large image, overlapping text, white space luxury\n- **Card Symphony**: Each point gets its own designed card with visual hierarchy\n- **Asymmetric Drama**: All content pushed to one side, other side breathes\n- **Layered Depth**: Background \u2192 Semi-transparent shapes \u2192 Content \u2192 Accents\n\n\u26a1 COMPONENT STRATEGY (Use 8-15 components!):\n- Background: Gradient for depth OR solid for impact\n- 2-3 Images: Go BIG (minimum 600\u00d7400, prefer 1000\u00d7600)\n- 3-5 TiptapTextBlocks: Different sizes create rhythm\n- 3-5 Shapes: BE CREATIVE! (see below)\n- 2-4 CustomComponents: Unique design elements (see below)\n\n\ud83d\udca5 EMPHASIS ARSENAL (Use ALL of these):\n- SIZE: Make heroes 5-10x larger than context\n- POSITION: Center = important, edges = supporting\n- COLOR: White on accent, accent on white\n- SPACING: Isolation = importance\n- OPACITY: Layer with transparency\n- ROTATION: 5-15\u00b0 for dynamic energy",
    "shape_design_patterns": "\ud83d\udd37 CREATIVE SHAPE USAGE - PURPOSEFUL & BEAUTIFUL:\n\n1. **GRADIENT SHAPES** (Not flat colors!):\n   ```json\n   {{\n     \"type\": \"Shape\",\n     \"props\": {{\n       \"shapeType\": \"circle\",\n       \"position\": {{\"x\": -200, \"y\": -100}},\n       \"width\": 1000,\n       \"height\": 1000,\n       \"gradient\": {{\n         \"type\": \"radial\",\n         \"angle\": 0,\n         \"stops\": [\n           {{\"color\": \"{accent_color}\", \"position\": 0}},\n           {{\"color\": \"{primary_mid}\", \"position\": 100}}\n         ]\n       }},\n       \"opacity\": 0.15,\n       \"rotation\": 45,\n       \"isAnimated\": true,\n       \"animationSpeed\": 0.3\n     }}\n   }}\n   ```\n\n2. **LAYERED SHAPE COMPOSITIONS**:\n   \n   DEPTH EFFECT (3+ shapes):\n   ```json\n   [\n     {{\n       \"type\": \"Shape\",\n       \"props\": {{\n         \"shapeType\": \"hexagon\",\n         \"position\": {{\"x\": 100, \"y\": 100}},\n         \"width\": 400,\n         \"height\": 400,\n         \"gradient\": {{\n           \"type\": \"linear\",\n           \"angle\": 45,\n           \"stops\": [\n             {{\"color\": \"{primary_dark}\", \"position\": 0}},\n             {{\"color\": \"{primary_mid}\", \"position\": 100}}\n           ]\n         }},\n         \"opacity\": 0.1,\n         \"zIndex\": 1\n       }}\n     }},\n     {{\n       \"type\": \"Shape\",\n       \"props\": {{\n         \"shapeType\": \"hexagon\",\n         \"position\": {{\"x\": 150, \"y\": 150}},\n         \"width\": 400,\n         \"height\": 400,\n         \"gradient\": {{\n           \"type\": \"linear\",\n           \"angle\": 45,\n           \"stops\": [\n             {{\"color\": \"{accent_color}\", \"position\": 0}},\n             {{\"color\": \"{primary_mid}\", \"position\": 100}}\n           ]\n         }},\n         \"opacity\": 0.15,\n         \"rotation\": 15,\n         \"zIndex\": 2\n       }}\n     }}\n   ]\n   ```\n\n3. **SHAPE DESIGN PATTERNS**:\n   \n   FLOATING ORBS (Modern/Tech):\n   - Multiple circles with radial gradients\n   - Varying sizes (200-800px)\n   - Low opacity (0.05-0.15)\n   - Positioned to create depth\n   - Some off-canvas for dynamism\n   \n   GEOMETRIC GRID (Corporate/Structure):\n   - Repeating hexagons or diamonds\n   - Linear gradients with consistent angle\n   - Uniform spacing\n   - Creates texture without distraction\n   \n   ORGANIC FLOW (Creative/Natural):\n   - Large circles/ellipses\n   - Overlapping with blend effects\n   - Gradient from edge colors\n   - Creates movement and energy\n   \n   ANGULAR ACCENT (Bold/Modern):\n   - Triangles and diamonds\n   - High contrast gradients\n   - Strategic positioning\n   - Creates directional flow\n\n4. **PURPOSEFUL SHAPE USAGE**:\n   \n   FRAME CONTENT:\n   ```json\n   {{\n     \"type\": \"Shape\",\n     \"props\": {{\n       \"shapeType\": \"rectangle\",\n       \"position\": {{\"x\": 50, \"y\": 50}},\n       \"width\": 1820,\n       \"height\": 980,\n       \"fill\": \"transparent\",\n       \"stroke\": \"{accent_color}\",\n       \"strokeWidth\": 3,\n       \"borderRadius\": 40,\n       \"opacity\": 0.5\n     }}\n   }}\n   ```\n   \n   HIGHLIGHT AREAS:\n   ```json\n   {{\n     \"type\": \"Shape\",\n     \"props\": {{\n       \"shapeType\": \"circle\",\n       \"position\": {{\"x\": 600, \"y\": 300}},\n       \"width\": 800,\n       \"height\": 800,\n       \"gradient\": {{\n         \"type\": \"radial\",\n         \"angle\": 0,\n         \"stops\": [\n           {{\"color\": \"{light_accent}\", \"position\": 0}},\n           {{\"color\": \"transparent\", \"position\": 100}}\n         ]\n       }},\n       \"opacity\": 0.3,\n       \"zIndex\": -1\n     }}\n   }}\n   ```\n   \n   CREATE SECTIONS:\n   ```json\n   {{\n     \"type\": \"Shape\",\n     \"props\": {{\n       \"shapeType\": \"rectangle\",\n       \"position\": {{\"x\": 0, \"y\": 540}},\n       \"width\": 1920,\n       \"height\": 540,\n       \"gradient\": {{\n         \"type\": \"linear\",\n         \"angle\": 0,\n         \"stops\": [\n           {{\"color\": \"{primary_dark}\", \"position\": 0}},\n           {{\"color\": \"{primary_mid}\", \"position\": 100}}\n         ]\n       }},\n       \"opacity\": 0.95\n     }}\n   }}\n   ```\n\n5. **ADVANCED TECHNIQUES**:\n   - Combine 5-10 shapes for complex backgrounds\n   - Use gradient animations for subtle movement\n   - Layer shapes with different blend modes\n   - Create depth with size and opacity variations\n   - Position shapes partially off-canvas\n   - Use shapes to guide eye movement\n   - Match shape style to content theme\n\n\ud83d\udeab NEVER:\n- Use flat, single-color shapes (boring!)\n- Place shapes randomly without purpose\n- Use too many different shape types\n- Make shapes compete with content\n\n\u2705 ALWAYS:\n- Use gradients for visual interest\n- Layer shapes for depth\n- Keep opacity subtle (0.05-0.3)\n- Use shapes to enhance, not distract\n- Match shapes to slide's emotional tone",
    "custom_component_guidelines": "\ud83d\ude80 CUSTOMCOMPONENT - SPECIAL EFFECTS ONLY:\n\n\u26a0\ufe0f IMPORTANT: DO NOT use CustomComponent for regular text! Use TiptapTextBlock instead.\nCustomComponent is ONLY for animations, counters, and special effects.\n\n**WHEN TO USE EACH COMPONENT:**\n- **TiptapTextBlock** (90% of text): Regular headings, body text, lists, quotes\n- **CustomComponent** (10% of text): Animated counters, sparkle effects, interactive elements\n- **Never use CustomComponent** for: Static text, regular content, basic styling\n\n\ud83d\uded1 CRITICAL FORMATTING RULES TO PREVENT ERRORS:\n\n1. **The render property MUST be a properly escaped string**\n2. **Use \\\\n for newlines inside the string**\n3. **Escape quotes properly: use \\\\\" or different quote types**\n4. **Function name MUST be exactly: function render**\n\n\u274c WRONG - This causes \"Unexpected identifier\" errors:\n```json\n{\n  \"render\": function render({ props }, instanceId) { ... }\n}\n```\n\n\u2705 CORRECT - Properly formatted as string:\n```json\n{\n  \"render\": \"function render({ props }, instanceId) {\\\\n  const text = props.text || 'Hello';\\\\n  return React.createElement('div', {}, text);\\\\n}\"\n}\n```\n\n\ud83d\udcdd STEP-BY-STEP STRING FORMATTING:\n1. Start with opening quote: \"function render...\n2. Replace ALL newlines with \\\\n\n3. Escape internal quotes: \\\\\" or use single quotes\n4. End with closing quote: ...}\"\n5. The entire function must be ONE STRING\n\nCOMPLETE WORKING EXAMPLE:\n```json\n{\n  \"type\": \"CustomComponent\",\n  \"props\": {\n    \"position\": {\"x\": 80, \"y\": 200},\n    \"width\": 1760,\n    \"height\": 400,\n    \"render\": \"function render({ props }, instanceId) {\\\\n  const lines = [\\\\n    props.line1 || 'Welcome to an electrifying journey',\\\\n    props.line2 || 'into the world of Pok\u00e9mon!',\\\\n    props.line3 || 'Pikachu has captured hearts worldwide',\\\\n    props.line4 || 'as the iconic mascot.'\\\\n  ];\\\\n  \\\\n  const fontSize = props.fontSize || 52;\\\\n  const textColor = props.textColor || '#333333';\\\\n  \\\\n  return React.createElement('div', {\\\\
    style: {\\\\
      width: '100%',\\\\
      height: '100%',\\\\
      display: 'flex',\\\\
      flexDirection: 'column',\\\\
      alignItems: 'center',\\\\
      justifyContent: 'center',\\\\
      fontSize: fontSize + 'px',\\\\
      color: textColor\\\\n    }\\\\n  }, lines.map((line, index) => \\\\n    React.createElement('div', {\\\\
      key: index,\\\\
      style: { marginBottom: '8px' }\\\\n    }, line)\\\\n  ));\\\\n}\",\n    \"props\": {\n      \"line1\": \"Welcome to an electrifying journey\",\n      \"line2\": \"into the world of Pok\u00e9mon!\",\n      \"line3\": \"Pikachu has captured hearts worldwide\",\n      \"line4\": \"as the iconic mascot.\",\n      \"fontSize\": 52,\n      \"textColor\": \"#333333\"\n    }\n  }\n}\n```\n\n\ud83c\udfa8 DESIGN ELEMENT IDEAS:\n\u2728 **Floating Particles**: Background elements that drift\n\u2728 **Gradient Meshes**: Animated color transitions\n\u2728 **Geometric Patterns**: Repeating shapes as texture\n\u2728 **Light Effects**: Glows, sparkles, lens flares\n\u2728 **Theme Elements**: Lightning for Pikachu, waves for ocean\n\u2728 **Progress Indicators**: Creative loading/completion visuals\n\u2728 **Decorative Frames**: Ornate borders for emphasis\n\u2728 **Animated Backgrounds**: Subtle movement for life\n\u2728 **Data Visualizations**: Beyond basic charts\n\u2728 **Brand Elements**: Logo animations, mascot features\n\nCRITICAL: Use React.createElement, NOT JSX syntax!\n\u274c WRONG: <div>...</div> or <svg>...</svg>\n\u2705 RIGHT: React.createElement('div', {...})\n\nELITE EXAMPLE - ANIMATED COUNTER:\n{\n    \"type\": \"CustomComponent\",\n    \"props\": {\n        \"position\": {\"x\": 560, \"y\": 400},\n        \"width\": 800,\n        \"height\": 200,\n        \"render\": \"function render({ props }, instanceId) {\\\\n  // SIMPLE STATIC VERSION - No state or animations to avoid hooks errors\\\\n  const value = props.value || 100;\\\\n  const suffix = props.suffix || '';\\\\n  const label = props.label || '';\\\\n  const fontSize = props.fontSize || 120;\\\\n  const labelSize = props.labelSize || 24;\\\\n  const color = props.color || '#000';\\\\n  const labelColor = props.labelColor || '#666';\\\\n  const fontFamily = props.fontFamily || 'Inter';\\\\n  const fontWeight = props.fontWeight || '300';\\\\n  \\\\n  return React.createElement('div', {\\\\
    style: {\\\\
      width: '100%',\\\\
      height: '100%',\\\\
      display: 'flex',\\\\
      flexDirection: 'column',\\\\
      alignItems: 'center',\\\\
      justifyContent: 'center',\\\\
      fontFamily: fontFamily,\\\\
      boxSizing: 'border-box',\\\\
      overflow: 'hidden'\\\\n    }\\\\n  }, [\\\\n    React.createElement('div', {\\\\
    key: 'value',\\\\
    style: {\\\\
      fontSize: fontSize + 'px',\\\\
      fontWeight: fontWeight,\\\\
      color: color,\\\\
      lineHeight: 1,\\\\
      letterSpacing: '-0.02em'\\\\n    }\\\\n  }, value + suffix),\\\\n    label && React.createElement('div', {\\\\
    key: 'label',\\\\
    style: {\\\\
      fontSize: labelSize + 'px',\\\\
      color: labelColor,\\\\
      marginTop: '16px',\\\\
      fontWeight: '400'\\\\n    }\\\\n  }, label)\\\\n  ]);\\\\n}\",\n        \"props\": {\n            \"value\": 340,\n            \"suffix\": \"%\",\n            \"label\": \"Growth Rate\",\n            \"fontSize\": \"180px\",\n            \"fontWeight\": \"200\"\n        }\n    }\n}\n\nPROPER SIZING EXAMPLE - TEXT IN SHAPE WITH NO CROPPING:\n{\n    \"type\": \"CustomComponent\",\n    \"props\": {\n        \"position\": {\"x\": 560, \"y\": 400},\n        \"width\": 800,  // Wide enough for text + padding\n        \"height\": 250, // fontSize * 1.1 + padding * 2\n        \"render\": \"function render({ props }, instanceId) {\\\\n  const text = props.text || 'Important Message';\\\\n  const fontSize = props.fontSize || 120;\\\\n  const padding = props.padding || 40;\\\\n  const bgColor = props.bgColor || '#000000';\\\\n  const textColor = props.textColor || '#FFFFFF';\\\\n  \\\\n  return React.createElement('div', {\\\\
    style: {\\\\
      width: '100%',\\\\
      height: '100%',\\\\
      display: 'flex',\\\\
      alignItems: 'center',\\\\
      justifyContent: 'center',\\\\
      backgroundColor: bgColor,\\\\
      borderRadius: '20px',\\\\
      padding: padding + 'px',\\\\
      boxSizing: 'border-box',\\\\
      overflow: 'hidden'\\\\n    }\\\\n  }, React.createElement('div', {\\\\
    style: {\\\\
      fontSize: fontSize + 'px',\\\\
      color: textColor,\\\\
      fontWeight: '700',\\\\
      textAlign: 'center',\\\\
      wordWrap: 'break-word',\\\\
      maxWidth: '100%'\\\\n    }\\\\n  }, text));\\\\n}\",\n        \"props\": {\n            \"text\": \"Key Insight\",\n            \"fontSize\": 120,\n            \"bgColor\": \"{accent_color}\",\n            \"textColor\": \"#FFFFFF\"\n        }\n    }\n}\n\nMULTI-LINE TEXT WITHOUT CROPPING:\n{\n    \"type\": \"CustomComponent\",\n    \"props\": {\n        \"position\": {\"x\": 360, \"y\": 300},\n        \"width\": 1200,\n        \"height\": 480,  // Generous height for multi-line\n        \"render\": \"function render({ props }, instanceId) {\\\\n  const lines = props.lines || ['First line of text', 'Second line of text', 'Third line of text'];\\\\n  const fontSize = props.fontSize || 60;\\\\n  const lineHeight = props.lineHeight || 1.4;\\\\n  const textColor = props.textColor || '#333333';\\\\n  \\\\n  return React.createElement('div', {\\\\
    style: {\\\\
      width: '100%',\\\\
      height: '100%',\\\\
      display: 'flex',\\\\
      flexDirection: 'column',\\\\
      alignItems: 'center',\\\\
      justifyContent: 'center',\\\\
      padding: '60px',\\\\
      boxSizing: 'border-box'\\\\n    }\\\\n  }, lines.map((line, i) => \\\\n    React.createElement('div', {\\\\
    key: i,\\\\
    style: {\\\\
      fontSize: fontSize + 'px',\\\\
      color: textColor,\\\\
      lineHeight: lineHeight,\\\\
      marginBottom: i < lines.length - 1 ? '20px' : 0,\\\\
      textAlign: 'center',\\\\
      maxWidth: '100%'\\\\n    }\\\\n  }, line)\\\\n  ));\\\\n}\",\n        \"props\": {\n            \"lines\": [\"Transform Your Business\", \"With Data-Driven Insights\", \"Starting Today\"],\n            \"fontSize\": 72,\n            \"textColor\": \"{text_color}\"\n        }\n    }\n}\n\nSTATS DISPLAY EXAMPLE (With Proper Props):\n{\n    \"type\": \"CustomComponent\",\n    \"props\": {\n        \"position\": {\"x\": 200, \"y\": 200},\n        \"width\": 600,\n        \"height\": 400,\n        \"render\": \"function render({ props }, instanceId) {\\\\n  // Extract ALL values as props\\\\n  const label1 = props.label1 || 'Revenue';\\\\n  const value1 = props.value1 || '$2.5M';\\\\n  const color1 = props.color1 || '#4CAF50';\\\\n  \\\\n  const label2 = props.label2 || 'Growth';\\\\n  const value2 = props.value2 || '+45%';\\\\n  const color2 = props.color2 || '#2196F3';\\\\n  \\\\n  const label3 = props.label3 || 'Users';\\\\n  const value3 = props.value3 || '10K+';\\\\n  const color3 = props.color3 || '#FF9800';\\\\n  \\\\n  const bgColor = props.bgColor || 'rgba(0, 0, 0, 0.8)';\\\\n  const borderRadius = props.borderRadius || 16; // px\\\\n  const padding = props.padding || 24; // px\\\\n  const labelSize = props.labelSize || 24; // px\\\\n  const valueSize = props.valueSize || 36; // px\\\\n  const labelColor = props.labelColor || '#999999';\\\\n  const dividerColor = props.dividerColor || '#333333';\\\\n  \\\\n  const stats = [\\\\n    { label: label1, value: value1, color: color1 },\\\\n    { label: label2, value: value2, color: color2 },\\\\n    { label: label3, value: value3, color: color3 }\\\\n  ];\\\\n  \\\\n  return React.createElement('div', {\\\\
    style: {\\\\
      width: '100%',\\\\
      height: '100%',\\\\
      display: 'flex',\\\\
      flexDirection: 'column',\\\\
      justifyContent: 'space-between',\\\\
      padding: padding + 'px',\\\\
      background: bgColor,\\\\
      borderRadius: borderRadius + 'px'\\\\n    }\\\\n  }, stats.map((stat, i) =>\\\\n    React.createElement('div', {\\\\
    key: i,\\\\
    style: {\\\\
      display: 'flex',\\\\
      justifyContent: 'space-between',\\\\
      alignItems: 'center',\\\\
      paddingBottom: i < stats.length - 1 ? '16px' : '0',\\\\
      borderBottom: i < stats.length - 1 ? `1px solid ${dividerColor}` : 'none'\\\\n    }\\\\n  }, [\\\\n      React.createElement('span', {\\\\
    key: 'label',\\\\
    style: { fontSize: labelSize + 'px', color: labelColor }\\\\n  }, stat.label),\\\\n      React.createElement('span', {\\\\
    key: 'value',\\\\
    style: { fontSize: valueSize + 'px', color: stat.color, fontWeight: 'bold' }\\\\n  }, stat.value)\\\\n    ])\\\\n  ));\\\\n}\",\n        \"props\": {\n            \"label1\": \"Revenue\",\n            \"value1\": \"$2.5M\",\n            \"color1\": \"{accent_color}\",\n            \"label2\": \"Growth\", \n            \"value2\": \"+45%\",\n            \"color2\": \"{primary_mid}\",\n            \"label3\": \"Users\",\n            \"value3\": \"10K+\", \n            \"color3\": \"{accent_color}\",\n            \"bgColor\": \"rgba(0, 0, 0, 0.8)\",\n            \"labelSize\": 24,\n            \"valueSize\": 36\n        }\n    }\n}\n\nTHEME DESIGN ELEMENT - LIGHTNING BOLTS FOR PIKACHU:\n{\n    \"type\": \"CustomComponent\",\n    \"props\": {\n        \"position\": {\"x\": 100, \"y\": 100},\n        \"width\": 200,\n        \"height\": 300,\n        \"render\": \"function render({ props }, instanceId) {\\\\n  const color = props.color || '#FFCB05';\\\\n  const opacity = props.opacity || 0.3;\\\\n  const rotation = props.rotation || -15;\\\\n  \\\\n  return React.createElement('div', {\\\\
    style: {\\\\
      width: '100%',\\\\
      height: '100%',\\\\
      transform: `rotate(${rotation}deg)`,\\\\
      opacity: opacity\\\\n    }\\\\n  }, React.createElement('svg', {\\\\
    viewBox: '0 0 100 150',\\\\
    style: { width: '100%', height: '100%' }\\\\n  }, React.createElement('path', {\\\\
    d: 'M20,10 L50,60 L35,55 L60,140 L30,80 L45,85 Z',\\\\
    fill: color,\\\\
    stroke: color,\\\\
    strokeWidth: 2\\\\n  })));\\\\n}\",\n        \"props\": {\n            \"color\": \"{accent_color}\",\n            \"opacity\": 0.2,\n            \"rotation\": -15\n        }\n    }\n}\n\nFLOATING GEOMETRIC PATTERN:\n{\n    \"type\": \"CustomComponent\",\n    \"props\": {\n        \"position\": {\"x\": 1400, \"y\": 100},\n        \"width\": 400,\n        \"height\": 400,\n        \"render\": \"function render({ props }, instanceId) {\\\\n  const primaryColor = props.primaryColor || '#0066CC';\\\\n  const secondaryColor = props.secondaryColor || '#FF6B6B';\\\\n  const opacity = props.opacity || 0.1;\\\\n  \\\\n  return React.createElement('div', {\\\\
    style: {\\\\
      width: '100%',\\\\
      height: '100%',\\\\
      position: 'relative'\\\\n    }\\\\n  }, [\\\\n    React.createElement('div', {\\\\
    key: 'hex1',\\\\
    style: {\\\\
      position: 'absolute',\\\\
      top: '20%',\\\\
      left: '10%',\\\\
      width: '40%',\\\\
      height: '40%',\\\\
      background: primaryColor,\\\\
      opacity: opacity,\\\\
      transform: 'rotate(45deg)'\\\\n    }\\\\n  }),\\\\n    React.createElement('div', {\\\\
    key: 'hex2',\\\\
    style: {\\\\
      position: 'absolute',\\\\
      bottom: '20%',\\\\
      right: '10%',\\\\
      width: '50%',\\\\
      height: '50%',\\\\
      background: secondaryColor,\\\\
      opacity: opacity * 0.7,\\\\
      transform: 'rotate(30deg)',\\\\n      borderRadius: '20%'\\\\n    }\\\\n  })\\\\n  ]);\\\\n}\",\n        \"props\": {\n            \"primaryColor\": \"{primary_mid}\",\n            \"secondaryColor\": \"{accent_color}\",\n            \"opacity\": 0.15\n        }\n    }\n}\n\nCUSTOMCOMPONENT BEST PRACTICES:\n1. Keep animations subtle and professional\n2. Use palette colors for consistency\n3. Focus on one brilliant interaction per component\n4. Prioritize performance - avoid heavy calculations\n5. Make it memorable but not distracting\n6. Think Apple-level polish and restraint\n\n\ud83d\udd27 CRITICAL PROP EXTRACTION RULES - MANDATORY:\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f ALWAYS extract ALL hardcoded values as props to make components instantly editable! \u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\nVIOLATION CHECK: Before finalizing any CustomComponent, ask yourself:\n- Are there ANY hardcoded strings? \u2192 Extract as props!\n- Are there ANY hardcoded numbers? \u2192 Extract as props!\n- Are there ANY hardcoded colors? \u2192 Extract as props!\n- Are there ANY hardcoded arrays? \u2192 Extract each item as props!\n\nIf you answered YES to any of these, YOU MUST extract them as props!\n\n\u274c WRONG (Hardcoded values):\nfunction render({{ props }}, instanceId) {{\n  return React.createElement('div', {{\n    style: {{\n      fontSize: '72px',        // \u274c Hardcoded\n      color: '#ffcd3c',        // \u274c Hardcoded\n      background: '#f0f0f0'    // \u274c Hardcoded\n    }}\n  }}, '1200V');               // \u274c Hardcoded\n}}\n\n\u2705 CORRECT (All values extracted as props):\nfunction render({{ props }}, instanceId) {{\n  // Define all customizable values as props at the beginning\n  const mainText = props.mainText || \"1200V\";\n  const fontSize = props.fontSize || 72; // px\n  const textColor = props.textColor || \"#ffcd3c\";\n  const backgroundColor = props.backgroundColor || \"#f0f0f0\";\n  \n  return React.createElement('div', {{\n    style: {{\n      fontSize: fontSize + 'px',      // \u2705 Using prop\n      color: textColor,               // \u2705 Using prop\n      background: backgroundColor     // \u2705 Using prop\n    }}\n  }}, mainText);                     // \u2705 Using prop\n}}\n\nPROP EXTRACTION GUIDELINES:\n- Extract ALL text content as props (mainText, label, title, etc.)\n- Extract ALL colors as props (textColor, backgroundColor, accentColor, etc.)\n- Extract ALL numeric values as props (fontSize, animationSpeed, spacing, etc.)\n- Extract ALL style values as props (fontWeight, textAlign, etc.)\n- Add type hints with comments (// px, // ms, // Options: light, dark)\n- Name props descriptively based on their purpose\n- ALWAYS define props at the beginning of the render function\n\nSPECIAL CASE - ARRAYS/LISTS:\n\u274c WRONG:\nconst stats = [\n  {{ label: 'Peak Output', value: '10,000V', color: '#ffcc00' }},\n  {{ label: 'Average Battle', value: '2,500V', color: '#ff6b35' }}\n];\n\n\u2705 CORRECT:\nconst label1 = props.label1 || 'Peak Output';\nconst value1 = props.value1 || '10,000V';\nconst color1 = props.color1 || '#ffcc00';\nconst label2 = props.label2 || 'Average Battle';\nconst value2 = props.value2 || '2,500V';\nconst color2 = props.color2 || '#ff6b35';\n\nconst stats = [\n  {{ label: label1, value: value1, color: color1 }},\n  {{ label: label2, value: value2, color: color2 }}\n];\n\n\u26a0\ufe0f CRITICAL CUSTOMCOMPONENT RULES:\n- NEVER use React hooks (useState, useEffect, etc.) in the render function\n- The render function is NOT a React component - it's a plain function\n- AVOID state and updateState - they can cause hooks errors!\n- AVOID conditional state updates (if (!state.initialized) is problematic)\n- AVOID setInterval/setTimeout with state updates - causes render issues\n- Keep CustomComponents SIMPLE and STATIC when possible\n- DO NOT put slide content text inside CustomComponents - use TiptapTextBlock for content\n- CustomComponents are for STYLED elements only (special formatting, backgrounds)\n- Main slide text MUST use TiptapTextBlock or TextBlock components\n- If you need animations, keep them CSS-based, not JavaScript-based\n\n\ud83d\udea8 BACKEND RENDERING REQUIREMENTS - CRITICAL FOR VISUAL ANALYSIS:\nThe backend needs to render your CustomComponents for visual validation. Follow these rules:\n\n1. **ALL TEXT MUST BE IN PROPS**:\n   - NEVER hardcode text in the render function\n   - ALWAYS pass text as props (mainText, title, label, etc.)\n   - The backend extracts text from props to render it\n\n2. **SIMPLE RENDER FUNCTIONS**:\n   - Keep render functions straightforward\n   - Avoid complex conditionals or calculations\n   - The simpler the function, the better it renders\n\n3. **EXPLICIT FONT SIZES**:\n   - ALWAYS specify fontSize in props\n   - Don't rely on complex calculations\n   - fontSize should be a direct prop value\n\n4. **HEIGHT CALCULATION FORMULA**:\n   ```\n   Single line: height = (fontSize * 1.5) + (padding * 2)\n   Multi-line: height = (fontSize * lineCount * 1.3) + (padding * 2)\n   Minimum: height = fontSize * 2\n   ```\n\n5. **TEXT CONTENT PATTERN**:\n   ```javascript\n   // \u2705 GOOD - Text in props\n   \"props\": {{\n     \"mainText\": \"Your actual text here\",\n     \"fontSize\": 120,\n     \"textColor\": \"#000000\"\n   }}\n   \n   // \u274c BAD - Hardcoded text\n   return React.createElement('div', {{}}, 'Hardcoded text');\n   ```\n\nBACKEND-FRIENDLY EXAMPLE:\n{{\n    \"type\": \"CustomComponent\",\n    \"props\": {{\n        \"position\": {{\"x\": 400, \"y\": 300}},\n        \"width\": 1120,\n        \"height\": 180,  // 120px font * 1.5\n        \"render\": \"function render({{ props }}, instanceId) {{\\\\n  const text = props.mainText || 'Default Text';\\\\n  const fontSize = props.fontSize || 120;\\\\n  const textColor = props.textColor || '#000000';\\\\n  \\\\n  return React.createElement('div', {{\\\\
    style: {{\\\\
      width: '100%',\\\\
      height: '100%',\\\\
      display: 'flex',\\\\
      alignItems: 'center',\\\\
      justifyContent: 'center',\\\\
      fontSize: fontSize + 'px',\\\\
      color: textColor,\\\\
      fontWeight: '700'\\\\n    }}\\\\n  }}, text);\\\\n}}\",\n        \"props\": {{\n            \"mainText\": \"Revenue Growth: 340%\",  // \u2190 Backend can extract this!\n            \"fontSize\": 120,                     // \u2190 Backend uses this for sizing!\n            \"textColor\": \"#FF6B6B\"\n        }}\n    }}\n}}\n\n\ud83c\udfaf CUSTOMCOMPONENT ALIGNMENT BEST PRACTICES:\n1. **Always use flexbox** for reliable text positioning\n2. **Set explicit line-height** (1 or 1.1) for large text to prevent extra space\n3. **Use padding: 0** on the outer container to maximize usable space\n4. **For hero text**, position the component where you want the TOP of the text\n5. **Test different Y positions** based on font size:\n   - 280pt text \u2192 Y: 150-200\n   - 200pt text \u2192 Y: 100-150\n   - 150pt text \u2192 Y: 80-120\n6. **Account for descenders** in text (letters like g, j, p, q, y)",
    "image_strategies": "\ud83c\udfa8 IMAGE MAGIC TOOLKIT - {len(available_images)} IMAGES READY:\n\n\u26a0\ufe0f NEW RULES: NO MORE SMALL IMAGES! Make them BIG and CENTRAL!\n- MINIMUM image size: 400\u00d7400px (smaller = WRONG!)\n- HERO images: 1920\u00d71080 or 1600\u00d7900\n- Feature images: 800\u00d7600 minimum\n- Card layouts: 400\u00d7500 per card minimum\n\nChoose from these {len(available_images)} pre-selected images:\n\nAVAILABLE IMAGES:\n{chr(10).join([f\"{i+1}. URL: {img.get('url', '')}\" + (f\" - {img.get('alt', '')}\" if img.get('alt') else \"\") for i, img in enumerate(available_images)])}\n\n\ud83c\udfc6 PREFERRED IMAGE LAYOUTS:\n\n1. MAGAZINE SPREAD (One massive image):\n{{\n  \"type\": \"Image\",\n  \"props\": {{\n    \"src\": \"{available_images[0].get('url', 'image_url')}\",\n    \"position\": {{\"x\": 0, \"y\": 0}},\n    \"width\": 1200,\n    \"height\": 1080,\n    \"objectFit\": \"cover\"\n  }}\n}}\n\n2. THREE-CARD STAGGERED (Dynamic arrangement):\n[\n  {{\n    \"type\": \"Image\",\n    \"props\": {{\n      \"src\": \"{available_images[0].get('url', '')}\",\n      \"position\": {{\"x\": 160, \"y\": 200}},\n      \"width\": 500,\n      \"height\": 600,\n      \"objectFit\": \"cover\",\n      \"borderRadius\": \"16px\"\n    }}\n  }},\n  {{\n    \"type\": \"Image\",\n    \"props\": {{\n      \"src\": \"{available_images[1].get('url', available_images[0].get('url', ''))}\",\n      \"position\": {{\"x\": 720, \"y\": 140}},  // Offset up\n      \"width\": 450,\n      \"height\": 700,\n      \"objectFit\": \"cover\",\n      \"borderRadius\": \"16px\"\n    }}\n  }},\n  {{\n    \"type\": \"Image\",\n    \"props\": {{\n      \"src\": \"{available_images[2].get('url', available_images[0].get('url', ''))}\",\n      \"position\": {{\"x\": 1230, \"y\": 260}},  // Offset down\n      \"width\": 480,\n      \"height\": 550,\n      \"objectFit\": \"cover\",\n      \"borderRadius\": \"16px\"\n    }}\n  }}\n]\n\n3. FOUR-CARD GRID (Perfect alignment):\nCreate 4 images at 400\u00d7500 each, arranged in a 2\u00d72 or 1\u00d74 grid\n\n4. MASONRY LAYOUT (Pinterest style):\nMultiple images with varying heights, tightly packed\n\nHERO IMAGE EXAMPLE (Full-screen with overlay):\n{{\n    \"type\": \"Image\",\n    \"props\": {{\n        \"src\": \"{available_images[0].get('url', 'image_url')}\",\n        \"position\": {{\"x\": 0, \"y\": 0}},\n        \"width\": 1920,\n        \"height\": 1080,\n        \"objectFit\": \"cover\",\n        \"filter\": {{\n            \"preset\": \"dramatic\",  // Try: cyberpunk, vintage, dreamy, noir\n            \"brightness\": 0.7,\n            \"contrast\": 1.3\n        }},\n        \"overlay\": {{\n            \"type\": \"gradient\",\n            \"gradient\": {{\n                \"type\": \"linear\",\n                \"angle\": 135,\n                \"colors\": [\"rgba(123, 97, 255, 0.8)\", \"rgba(0, 212, 255, 0.4)\"]\n            }},\n            \"blendMode\": \"multiply\"\n        }},\n        \"animation\": {{\n            \"type\": \"ken-burns\",\n            \"duration\": 30,\n            \"scale\": 1.2\n        }}\n    }}\n}}\n\nSPLIT-SCREEN EXAMPLE (Multiple images with effects):\n{{\n    \"type\": \"Image\",\n    \"props\": {{\n        \"src\": \"{available_images[1].get('url', available_images[0].get('url', ''))}\",\n        \"position\": {{\"x\": 0, \"y\": 0}},\n        \"width\": 960,\n        \"height\": 1080,\n        \"mask\": \"diagonal\",  // Or: circle, hexagon, diamond\n        \"filter\": {{\n            \"preset\": \"duotone\",\n            \"duotoneColors\": [\"#FF006E\", \"#00D4FF\"]\n        }},\n        \"transform\": {{\n            \"perspective\": 1000,\n            \"rotateY\": -5,\n            \"scale\": 1.05\n        }},\n        \"hover\": {{\n            \"type\": \"zoom-rotate\",\n            \"scale\": 1.1,\n            \"rotate\": 3\n        }}\n    }}\n}}\n\nARTISTIC COLLAGE (Overlapping with masks):\n{{\n    \"type\": \"Image\",\n    \"props\": {{\n        \"src\": \"{available_images[2].get('url', available_images[0].get('url', ''))}\",\n        \"position\": {{\"x\": 100, \"y\": 100}},\n        \"width\": 600,\n        \"height\": 600,\n        \"mask\": \"circle\",\n        \"filter\": {{\n            \"grayscale\": 1,\n            \"contrast\": 1.2\n        }},\n        \"overlay\": {{\n            \"type\": \"pattern\",\n            \"pattern\": \"halftone\",\n            \"color\": \"#FF006E\",\n            \"opacity\": 0.3\n        }},\n        \"animation\": {{\n            \"type\": \"float\",\n            \"amplitude\": 20,\n            \"duration\": 4\n        }},\n        \"glitch\": {{\n            \"enabled\": true,\n            \"intensity\": 0.3\n        }}\n    }}\n}}\n\nCREATIVE TECHNIQUES:\n1. DUOTONE BRANDING: Use duotone with brand colors for consistency\n2. PARALLAX DEPTH: Layer multiple images with different parallax speeds\n3. MASK COMPOSITIONS: Combine shapes (circle, diamond, heart) for unique layouts\n4. GLITCH TECH: Add glitch effects for digital/tech themes\n5. PATTERN OVERLAYS: Use halftone, scanlines, dots for texture\n6. 3D TRANSFORMS: Subtle perspective and rotation for depth\n7. ANIMATED REVEALS: Combine fade-in with slide/zoom for dynamic entry\n\nLAYOUT INSPIRATIONS:\n- MAGAZINE SPREAD: Full-bleed image with text in white space\n- POLAROID GRID: Multiple images with white borders, slight rotation\n- TORN PAPER: Masked images that look torn or ripped\n- FLOATING CARDS: Images with shadows, hovering at different depths\n- KALEIDOSCOPE: Same image repeated with different filters/rotations\n\n\ud83d\udea8 CRITICAL: IMAGE-TEXT BALANCE & GRADIENT TRANSPARENCY\n\nPREVENT IMAGE DOMINATION:\nImages should enhance, not overwhelm. When using large images:\n\n1. TEXT OVERLAY WITH GRADIENT TRANSPARENCY:\n{{\n    \"type\": \"Image\",\n    \"props\": {{\n        \"src\": \"image_url\",\n        \"position\": {{\"x\": 0, \"y\": 0}},\n        \"width\": 1920,\n        \"height\": 1080,\n        \"objectFit\": \"cover\",\n        \"overlay\": {{\n            \"type\": \"gradient\",\n            \"preset\": \"fadeToTransparent\",  // Perfect for text readability!\n            \"gradient\": {{\n                \"type\": \"linear\",\n                \"angle\": 180,  // Top to bottom\n                \"colors\": [\"rgba(0,0,0,1)\", \"rgba(0,0,0,0)\"]  // Solid black to transparent\n            }}\n        }}\n    }}\n}},\n{{\n    \"type\": \"TiptapTextBlock\",\n    \"props\": {{\n        \"position\": {{\"x\": 100, \"y\": 600}},  // Text in the gradient area\n        \"width\": 1720,\n        \"height\": 400,\n        \"fontSize\": 120,\n        \"color\": \"#FFFFFF\",  // White text on dark gradient\n        \"texts\": [{{\"text\": \"Your Title Here\"}}],\n        \"zIndex\": 10\n    }}\n}}\n\n2. GRADIENT TRANSPARENCY PRESETS:\n- fadeToTransparent: Solid color \u2192 fully transparent\n- fadeToBlack: Transparent \u2192 solid black (transparent to fully opaque black)\n- fadeToWhite: Transparent \u2192 solid white (transparent to fully opaque white)\n- vignette: Radial gradient darkening edges\n- radialFade: Light center fading outward\n- topFade: Fade from top (for bottom text)\n- bottomFade: Fade from bottom (for top text)\n- cinematic: Complex multi-stop gradient for letterbox effect\n\n3. SMART IMAGE SIZING:\n- Full-screen hero: Use gradient overlay for text areas\n- Side-by-side: Image 960px wide, text gets 960px\n- Background texture: Low opacity (0.2-0.3) behind text\n- Accent images: Smaller (400-600px) with text wrapping\n\n4. TEXT-FIRST LAYOUTS:\nWhen content is king, images support:\n{{\n    \"type\": \"Image\",\n    \"props\": {{\n        \"src\": \"image_url\",\n        \"position\": {{\"x\": 1200, \"y\": 200}},  // Right side accent\n        \"width\": 600,\n        \"height\": 600,\n        \"mask\": \"circle\",\n        \"overlay\": {{\n            \"type\": \"gradient\",\n            \"preset\": \"radialFade\",\n            \"gradient\": {{\n                \"type\": \"radial\",\n                \"colors\": [\"rgba(255,255,255,0)\", \"rgba(255,255,255,0.5)\"]  // Transparent to semi-white\n            }}\n        }}\n    }}\n}}\n\n5. GRADIENT OVERLAY EXAMPLES:\n// Bottom gradient for hero text\n\"overlay\": {{\n    \"type\": \"gradient\",\n    \"gradient\": {{\n        \"type\": \"linear\",\n        \"angle\": 0,  // Bottom to top\n        \"colors\": [\"rgba(0,0,0,0.8)\", \"rgba(0,0,0,0)\"]  // 80% black to transparent\n    }}\n}}\n\n// Cinematic letterbox\n\"overlay\": {{\n    \"type\": \"gradient\",\n    \"preset\": \"cinematic\",\n    \"gradient\": {{\n        \"type\": \"linear\",\n        \"angle\": 180,\n        \"colors\": [\n            \"rgba(0,0,0,1)\",    // Solid black\n            \"rgba(0,0,0,0.8)\",  // 80% black\n            \"rgba(0,0,0,0)\",    // Transparent middle\n            \"rgba(0,0,0,0)\",    // Transparent middle\n            \"rgba(0,0,0,0.8)\",  // 80% black\n            \"rgba(0,0,0,1)\"     // Solid black\n        ],\n        \"stops\": [0, 0.2, 0.4, 0.6, 0.8, 1]\n    }}\n}}\n\nRULES FOR IMAGE-TEXT HARMONY:\n1. If image width > 1200px, add gradient overlay for text\n2. Text should have dedicated space OR clear overlay\n3. Use zIndex to ensure text is always readable\n4. Gradient transparency creates smooth transitions\n5. Don't let images push text into tiny corners\n6. Consider split layouts: image left, text right\n7. Or overlay with gradient: image full, text on gradient\n\nRemember: Images enhance the message, they don't replace it!",
    "title_slide_patterns": "\ud83c\udf86 TITLE SLIDE - MAKE IT UNFORGETTABLE!\n\nYOU MUST CREATE A BOLD, DRAMATIC TITLE SLIDE:\n\n1. **HERO IMAGE MANDATORY**:\n   - Full-bleed 1920\u00d71080 background image\n   - Use dramatic gradient overlays for text contrast\n   - Consider cinematic letterbox effects\n\n2. **MASSIVE TYPOGRAPHY - GO EVEN BIGGER**:\n   - Title: 240-600pt standard (or even larger when design calls for it!)\n   - Single word titles: 400-800pt (fill the screen!)\n   - Can overlap the image with proper contrast\n   - Try off-center positioning for drama\n   - Use the boldest weight available\n   - **NEW**: Let the design intent drive the size - if it feels too small, GO BIGGER!\n\n3. **LAYOUT OPTIONS**:\n   ```json\n   // CENTERED HERO\n   {{\n     \"type\": \"Image\",\n     \"props\": {{\n       \"src\": \"placeholder\",  // ALWAYS use \"placeholder\", never generate URLs!\n       \"position\": {{\"x\": 0, \"y\": 0}},\n       \"width\": 1920,\n       \"height\": 1080,\n       \"objectFit\": \"cover\",\n       \"overlay\": {{\n         \"type\": \"gradient\",\n         \"gradient\": {{\n           \"type\": \"linear\",\n           \"angle\": 180,\n           \"colors\": [\"rgba(0,0,0,0.7)\", \"rgba(0,0,0,0.3)\"]\n         }}\n       }}\n     }}\n   }},\n   {{\n     \"type\": \"TiptapTextBlock\",\n     \"props\": {{\n       \"position\": {{\"x\": 160, \"y\": 240}},\n       \"width\": 1600,\n       \"height\": 600,\n       \"texts\": [{{\"text\": \"{slide_outline.title}\", \"fontSize\": 480, \"fontWeight\": \"900\", \"color\": \"#FFFFFF\"}}],\n       \"alignment\": \"center\",\n       \"verticalAlignment\": \"middle\",\n       \"padding\": 0\n     }}\n   }}\n\n   // OFF-CENTER DRAMATIC (EXTRA LARGE)\n   {{\n     \"type\": \"TiptapTextBlock\",\n     \"props\": {{\n       \"position\": {{\"x\": 120, \"y\": 150}},\n       \"width\": 1680,\n       \"height\": 780,\n       \"texts\": [{{\"text\": \"{slide_outline.title}\", \"fontSize\": 600, \"fontWeight\": \"900\", \"color\": \"#FFFFFF\"}}],\n       \"alignment\": \"left\",\n       \"verticalAlignment\": \"middle\",\n       \"padding\": 0\n     }}\n   }}\n   \n   // SINGLE WORD MEGA TITLE\n   {{\n     \"type\": \"TiptapTextBlock\",\n     \"props\": {{\n       \"position\": {{\"x\": 0, \"y\": 200}},\n       \"width\": 1920,\n       \"height\": 680,\n       \"texts\": [{{\"text\": \"{slide_outline.title}\", \"fontSize\": 800, \"fontWeight\": \"900\", \"color\": \"#FFFFFF\", \"letterSpacing\": \"-0.05em\"}}],\n       \"alignment\": \"center\",\n       \"verticalAlignment\": \"middle\",\n       \"padding\": 0\n     }}\n   }}\n   ```\n\n4. **SUBTITLE TREATMENT**:\n   - Still large: 80-120pt\n   - Complementary positioning\n   - Consider accent colors\n   - Add breathing room\n\n## \ud83d\udcca TABLE CREATION GUIDELINES - DENSE DATA DISPLAY:\n\n### When creating tables with lots of data:\n1. **USE TIPTAPTEXTBLOCK for tables** - it supports better text formatting\n2. **TEXT SIZE**: 8-16pt for table cells (dense data needs small text)\n3. **CELL PADDING**: MUST be 0 for maximum data density\n4. **ROW HEIGHT**: Calculate based on fontSize \u00d7 1.2\n5. **COLUMN WIDTH**: Distribute evenly or based on content\n\n### Table Example with Dense Data:\n```json\n{\n  \"type\": \"TiptapTextBlock\",\n  \"props\": {\n    \"position\": {\"x\": 80, \"y\": 200},\n    \"width\": 1760,\n    \"height\": 800,\n    \"backgroundColor\": \"#F8F9FA\",\n    \"borderRadius\": \"8px\",\n    \"padding\": 0,  // CRITICAL: Must be 0 for tables\n    \"texts\": [\n      {\"text\": \"Quarter\", \"fontSize\": 12, \"fontWeight\": \"700\", \"color\": \"#000000\"},\n      {\"text\": \"Revenue\", \"fontSize\": 12, \"fontWeight\": \"700\", \"color\": \"#000000\"},\n      {\"text\": \"Growth\", \"fontSize\": 12, \"fontWeight\": \"700\", \"color\": \"#000000\"},\n      {\"text\": \"Q1 2024\", \"fontSize\": 10, \"color\": \"#333333\"},\n      {\"text\": \"$2.5M\", \"fontSize\": 10, \"color\": \"#333333\"},\n      {\"text\": \"+15%\", \"fontSize\": 10, \"color\": \"{primary_mid}\"},\n      // ... more rows with 8-10pt font\n    ],\n    \"alignment\": \"left\",\n    \"verticalAlignment\": \"top\"\n  }\n}\n```\n\n### Dense Data Rules:\n- **Many rows (10+)**: Use 8-10pt font\n- **Medium rows (5-10)**: Use 10-14pt font  \n- **Few rows (2-5)**: Use 14-18pt font\n- **Headers**: Bold, 2-4pt larger than cells\n- **Cell padding**: ALWAYS 0 for tables\n- **Use alternating row colors** for readability\n\n5. **WHEN TO GO BIG (400-800pt)**:\n   - Single word titles (\"INNOVATION\", \"FUTURE\", \"NOW\")\n   - Short impactful phrases (2-4 words max)\n   - When the title IS the design\n   - Minimalist layouts with lots of space\n   - When drama and impact are the goals\n   - Bold, confident brand messages\n   \n6. **WHEN TO STAY MODERATE (240-400pt)**:\n   - Longer titles (5+ words)\n   - Information-heavy slides\n   - Professional/corporate contexts\n   - When readability is paramount\n   - Complex backgrounds\n   \n7. **DESIGN-DRIVEN DECISIONS**:\n   - Let the content and context guide the size\n   - Consider the emotional impact you want\n   - Balance with other elements on the slide\n   - Test the visual hierarchy\n   - If it feels too small for the design vision, GO BIGGER!\n\n5. **CREATIVE EFFECTS**:\n   - Text animations (float, fade, slide)\n   - Gradient text fills\n   - Overlapping layers\n   - Dramatic shadows\n   - Ken Burns on background image\n\nREMEMBER: This is the FIRST impression. Make it count!",
    "statistics_emphasis": "\ud83d\udca5 STATS DETECTED - MAKE THEM POP!\n\nThis slide contains numbers/stats - they MUST be emphasized:\n\n1. **ISOLATE THE STAT**:\n   ```json\n   {{\n     \"type\": \"CustomComponent\",\n     \"props\": {{\n       \"position\": {{\"x\": 660, \"y\": 300}},\n       \"width\": 600,\n       \"height\": 400,\n       \"render\": \"function render({{ props }}, instanceId) {{ const stat = props.stat || '92%'; const label = props.label || 'Success Rate'; return React.createElement('div', {{ style: {{ textAlign: 'center' }} }}, [ React.createElement('div', {{ key: 'stat', style: {{ fontSize: '240px', fontWeight: '900', color: props.accentColor || '#FF6B6B', lineHeight: 1 }} }}, stat), React.createElement('div', {{ key: 'label', style: {{ fontSize: '48px', color: '#666', marginTop: '20px' }} }}, label) ]); }}\",\n       \"stat\": \"92%\",\n       \"label\": \"Success Rate\",\n       \"accentColor\": \"{accent_color}\"\n     }}\n   }}\n   ```\n\n2. **STAT WITH SEMI-TRANSPARENT BACKGROUND (RECOMMENDED)**:\n   ```json\n   {{\n     \"type\": \"TiptapTextBlock\",\n     \"props\": {{\n       \"position\": {{\"x\": 700, \"y\": 350}},\n       \"width\": 520,\n       \"height\": 380,\n       \"backgroundColor\": \"{light_accent}20\",  // 20% opacity of light accent\n       \"borderRadius\": \"40px\",\n       \"padding\": 0,\n       \"texts\": [{{\n         \"text\": \"+340%\",\n         \"fontSize\": 180,\n         \"fontWeight\": \"bold\",\n         \"color\": \"{accent_color}\"  // Accent color for the number\n       }}],\n       \"alignment\": \"center\",\n       \"verticalAlignment\": \"middle\"\n     }}\n   }}\n   ```\n\n3. **STYLING RULES FOR STATS**:\n   - Font size: 180-300pt minimum\n   - Font weight: 800-900 (extra bold)\n   - Use accent colors from palette\n   - Add backgrounds or shapes\n   - Give LOTS of whitespace\n   - Consider animations/effects",
    "background_design": "\ud83c\udfa8 BACKGROUND COMPONENT - USAGE POLICY:\nDo NOT always include a Background.\n\n- Title slides: Include a Background (hero image or gradient) for impact.\n- Section slides: Optional Background for separation.\n- Content/Data slides: Avoid Backgrounds by default; prefer a clean canvas.\n\nIf you include a gradient Background, use correct nested format.\n\n1. **GRADIENT BACKGROUNDS** (When appropriate):\n   \n   SOPHISTICATED LINEAR GRADIENT:\n   ```json\n   {{\n     \"type\": \"Background\",\n     \"props\": {{\n       \"position\": {{\"x\": 0, \"y\": 0}},\n       \"width\": 1920,\n       \"height\": 1080,\n       \"backgroundType\": \"gradient\",\n       \"gradient\": {{\n         \"type\": \"linear\",\n         \"angle\": 135,  // Diagonal for dynamism\n         \"stops\": [\n           {{\"color\": \"{primary_dark}\", \"position\": 0}},\n           {{\"color\": \"{primary_mid}\", \"position\": 100}}\n         ]\n       }}\n     }}\n   }}\n   ```\n   \n   MULTI-COLOR GRADIENT (Modern & Bold):\n   ```json\n   {{\n     \"type\": \"Background\",\n     \"props\": {{\n       \"backgroundType\": \"gradient\",\n       \"gradient\": {{\n         \"type\": \"linear\",\n         \"angle\": 45,\n         \"stops\": [\n           {{\"color\": \"{primary_dark}\", \"position\": 0}},\n           {{\"color\": \"{accent_color}\", \"position\": 50}},\n           {{\"color\": \"{primary_mid}\", \"position\": 100}}\n         ]\n       }}\n     }}\n   }}\n   ```\n   \n   RADIAL GRADIENT (Spotlight Effect):\n   ```json\n   {{\n     \"type\": \"Background\",\n     \"props\": {{\n       \"backgroundType\": \"gradient\",\n       \"gradient\": {{\n         \"type\": \"radial\",\n         \"angle\": 0,\n         \"stops\": [\n           {{\"color\": \"{light_bg}\", \"position\": 0}},\n           {{\"color\": \"{light_accent}\", \"position\": 70}},\n           {{\"color\": \"{primary_mid}\", \"position\": 100}}\n         ]\n       }}\n     }}\n   }}\n   ```\n   \n   ANIMATED GRADIENT (Premium Feel):\n   ```json\n   {{\n     \"type\": \"Background\",\n     \"props\": {{\n       \"backgroundType\": \"gradient\",\n       \"gradient\": {{\n         \"type\": \"linear\",\n         \"angle\": 270,\n         \"stops\": [\n           {{\"color\": \"{primary_dark}\", \"position\": 0}},\n           {{\"color\": \"{accent_color}\", \"position\": 100}}\n         ]\n       }},\n       \"isAnimated\": true,\n       \"animationSpeed\": 0.5  // Subtle movement\n     }}\n   }}\n   ```",
    "text_sizing_rules": "\ud83d\udccf TEXT SIZING AND COMPONENT GUIDELINES:\n\n# \ud83d\udea8 CRITICAL: TEXT IN SHAPES = SINGLE COMPONENT RULE \ud83d\udea8\n\n**NEVER create separate Shape and Text components when text needs a background!**\n\n\u2705 CORRECT - Single TiptapTextBlock with transparent background (preferred):\n{\n  \"type\": \"TiptapTextBlock\",\n  \"props\": {\n    \"position\": {\"x\": 560, \"y\": 400},\n    \"width\": 800,\n    \"height\": 200,\n    \"texts\": [{\"text\": \"Your Text\", \"fontSize\": 48}],\n    \"fontFamily\": \"Inter\",  // Will be replaced with theme fonts\n    \"alignment\": \"center\",\n    \"verticalAlignment\": \"middle\",\n    \"padding\": 0\n  }\n}\n\n\u274c WRONG - Separate components:\n[\n  {\"type\": \"Shape\", \"props\": {\"position\": {\"x\": 500, \"y\": 400}}},\n  {\"type\": \"TextBlock\", \"props\": {\"position\": {\"x\": 560, \"y\": 440}}}\n]\n\n**When text moves, its background MUST move with it as ONE unit!**"
  }
}